on:
  push:
    branches: [ 'test/*' ]
  workflow_dispatch:
    branches: [ 'test/*' ]

name: kwil-aws-push

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.KWIL_MACH_SECRET }}

    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        version: '3.x'
        repo-token: ${{ secrets.KWIL_MACH_SECRET }}

    - name: Install Taskfile
      uses: arduino/setup-task@v1

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.0'
        cache: true

    - name: Install dependencies
      run: |
        go version
        go mod download
        task deps

    - name: Compile Protobuf
      run: |
        task pb:compile:all

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Set version
      id: vers
      run: echo "val=$(git describe)" >> $GITHUB_OUTPUT

    - name: Build(KD), tag, and push docker image to Amazon ECR (used with ECS Fargate)
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY1: ${{ secrets.AWS_KWILD_ECR }}
        ECR_REPOSITORY2: ${{ secrets.AWS_KWIL_GATEWAY_ECR }}
        IMAGE_HASH_TAG: ${{ github.sha }}
        IMAGE_SHORT_HASH_TAG: ${{ steps.vars.outputs.sha_short }}
        IMAGE_VERSION: ${{ steps.vers.version.val}}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR
        #docker build -f ./build/package/docker/kwild.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY1:kd$IMAGE_HASH_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG .
        docker build -f ./build/package/docker/kwild.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG .
        echo "Pushing images to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY1 --all-tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY1 --all-tags" >> $GITHUB_OUTPUT

    - name: Build(KG), tag, and push docker image to Amazon ECR (used with ECS Fargate)
      env:
        DOCKER_BUILDKIT: 1
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY1: ${{ secrets.AWS_KWILD_ECR }}
        ECR_REPOSITORY2: ${{ secrets.AWS_KWIL_GATEWAY_ECR }}
        IMAGE_HASH_TAG: ${{ github.sha }}
        IMAGE_SHORT_HASH_TAG: ${{ steps.vars.outputs.sha_short }}
        IMAGE_VERSION: ${{ steps.vers.version.val}}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and push it to ECR
        docker build -f ./build/package/docker/kwil-gateway.dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG .
        echo "Pushing images to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY2 --all-tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY2 --all-tags" >> $GITHUB_OUTPUT
