{
  "openrpc": "1.2.4",
  "info": {
    "title": "Kwil DB user service",
    "description": "The JSON-RPC user service for Kwil DB.",
    "license": {
      "name": "CC0-1.0",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
    },
    "version": "0.2.0"
  },
  "methods": [
    {
      "name": "user.account",
      "description": "get an account's status",
      "params": [
        {
          "name": "id",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/accountID"
          },
          "required": true
        },
        {
          "name": "status",
          "schema": {
            "type": "integer"
          },
          "required": false
        }
      ],
      "result": {
        "name": "accountResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/accountResponse"
        },
        "description": "balance and nonce of an accounts"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.authenticated_query",
      "description": "perform an authenticated ad-hoc SQL query",
      "params": [
        {
          "name": "Challenge",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "auth_type",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "body",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/rawStatement"
          },
          "required": true
        },
        {
          "name": "sender",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "signature",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "result": {
        "name": "queryResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/queryResponse"
        },
        "description": "the result of the query as a collection of records"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.broadcast",
      "description": "broadcast a transaction",
      "params": [
        {
          "name": "tx",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/transaction"
          },
          "required": true
        },
        {
          "name": "sync",
          "schema": {
            "type": "integer"
          },
          "required": false
        }
      ],
      "result": {
        "name": "broadcastResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/broadcastResponse"
        },
        "description": "the hash of the transaction"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.call",
      "description": "call an action",
      "params": [
        {
          "name": "auth_type",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "body",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/callMessageBody"
          },
          "required": true
        },
        {
          "name": "sender",
          "schema": {
            "type": "string"
          },
          "required": true
        },
        {
          "name": "signature",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "result": {
        "name": "callResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/callResponse"
        },
        "description": "the result of the action call as a encoded records"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.chain_info",
      "description": "get current blockchain info",
      "params": [],
      "result": {
        "name": "chainInfo",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/chainInfo"
        },
        "description": "chain info including chain ID and best block"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.challenge",
      "description": "request a call challenge",
      "params": [],
      "result": {
        "name": "challengeResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/challengeResponse"
        },
        "description": "the challenge value for the client to include in a call request signature"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.changeset",
      "description": "load a changeset for a given height and index",
      "params": [
        {
          "name": "height",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "index",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "result": {
        "name": "changesetsResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/changesetsResponse"
        },
        "description": "the changeset for the given height and index"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.changeset_metadata",
      "description": "get the changeset metadata for a given height",
      "params": [
        {
          "name": "height",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "result": {
        "name": "changesetMetadataResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/changesetMetadataResponse"
        },
        "description": "the changesets metadata for the given height"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.estimate_price",
      "description": "estimate the price of a transaction",
      "params": [
        {
          "name": "tx",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/transaction"
          },
          "required": true
        }
      ],
      "result": {
        "name": "estimatePriceResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/estimatePriceResponse"
        },
        "description": "balance and nonce of an accounts"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.health",
      "description": "check the user service health",
      "params": [],
      "result": {
        "name": "health",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/health"
        },
        "description": "the health status and other relevant of the services health"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.list_migrations",
      "description": "list active migration resolutions",
      "params": [],
      "result": {
        "name": "listMigrationsResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/listMigrationsResponse"
        },
        "description": "the list of all the pending migration resolutions"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.list_update_proposals",
      "description": "list active consensus parameter update proposals",
      "params": [],
      "result": {
        "name": "listPendingConsensusUpdatesResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/listPendingConsensusUpdatesResponse"
        },
        "description": "the list of all the active consensus parameter update proposals"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.migration_genesis_chunk",
      "description": "get a genesis snapshot chunk of given idx",
      "params": [
        {
          "name": "chunk_index",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "height",
          "schema": {
            "type": "integer"
          },
          "required": true
        }
      ],
      "result": {
        "name": "migrationSnapshotChunkResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/migrationSnapshotChunkResponse"
        },
        "description": "the genesis chunk for the given index"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.migration_metadata",
      "description": "get the migration information",
      "params": [],
      "result": {
        "name": "migrationMetadataResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/migrationMetadataResponse"
        },
        "description": "the metadata for the given migration"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.migration_status",
      "description": "get the migration status",
      "params": [],
      "result": {
        "name": "migrationStatusResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/migrationStatusResponse"
        },
        "description": "the status of the migration"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.num_accounts",
      "description": "get the current number of accounts on the DB node",
      "params": [],
      "result": {
        "name": "numAccountsResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/numAccountsResponse"
        },
        "description": "the number of accounts"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.ping",
      "description": "ping the server",
      "params": [
        {
          "name": "message",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "result": {
        "name": "pingResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/pingResponse"
        },
        "description": "a message back from the server"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.query",
      "description": "perform an ad-hoc SQL query",
      "params": [
        {
          "name": "params",
          "schema": {
            "type": "object",
            "$ref": "#/components/schemas/"
          },
          "required": true
        },
        {
          "name": "query",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "result": {
        "name": "queryResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/queryResponse"
        },
        "description": "the result of the query as a collection of records"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.tx_query",
      "description": "query for the status of a transaction",
      "params": [
        {
          "name": "tx_hash",
          "schema": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "required": true
        }
      ],
      "result": {
        "name": "txQueryResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/txQueryResponse"
        },
        "description": "the execution status of a transaction"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.update_proposal_status",
      "description": "list active consensus parameter update proposals",
      "params": [],
      "result": {
        "name": "listPendingConsensusUpdatesResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/listPendingConsensusUpdatesResponse"
        },
        "description": "the list of all the active consensus parameter update proposals"
      },
      "paramStructure": "by-name"
    },
    {
      "name": "user.version",
      "description": "retrieve the API version of the user service",
      "params": [],
      "result": {
        "name": "versionResponse",
        "schema": {
          "type": "object",
          "$ref": "#/components/schemas/versionResponse"
        },
        "description": "service info including semver and kwild version"
      },
      "paramStructure": "by-name"
    }
  ],
  "components": {
    "schemas": {
      "accountID": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "key_type": {
            "type": "string"
          }
        }
      },
      "accountResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "string"
          },
          "id": {
            "type": "object",
            "$ref": "#/components/schemas/accountID"
          },
          "nonce": {
            "type": "integer"
          }
        }
      },
      "broadcastResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "$ref": "#/components/schemas/txResult"
          },
          "tx_hash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      },
      "callMessageBody": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          }
        }
      },
      "callResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "logs": {
            "type": "string"
          },
          "query_result": {
            "type": "object",
            "$ref": "#/components/schemas/queryResult"
          }
        }
      },
      "chainInfo": {
        "type": "object",
        "properties": {
          "block_hash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "block_height": {
            "type": "integer"
          },
          "chain_id": {
            "type": "string"
          },
          "gas": {
            "type": "boolean"
          }
        }
      },
      "challengeResponse": {
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string"
          }
        }
      },
      "changesetMetadataResponse": {
        "type": "object",
        "properties": {
          "changesets": {
            "type": "integer"
          },
          "chunk_sizes": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "height": {
            "type": "integer"
          }
        }
      },
      "changesetsResponse": {
        "type": "object",
        "properties": {
          "changesets": {
            "type": "string"
          }
        }
      },
      "consensusParamUpdateProposal": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "updates": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "dataType": {
        "type": "object",
        "properties": {
          "is_array": {
            "type": "boolean"
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "name": {
            "type": "string"
          }
        }
      },
      "encodedValue": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "object",
            "$ref": "#/components/schemas/dataType"
          }
        }
      },
      "estimatePriceResponse": {
        "type": "object",
        "properties": {
          "price": {
            "type": "string"
          }
        }
      },
      "event": {
        "type": "object"
      },
      "genesisInfo": {
        "type": "object",
        "properties": {
          "app_hash": {
            "type": "string"
          },
          "validators": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/validator"
            }
          }
        }
      },
      "health": {
        "type": "object",
        "properties": {
          "ChainInfo": {
            "type": "object",
            "$ref": "#/components/schemas/chainInfo"
          },
          "app_hash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "block_age": {
            "type": "integer"
          },
          "block_hash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "block_height": {
            "type": "integer"
          },
          "block_time": {
            "type": "integer"
          },
          "chain_id": {
            "type": "string"
          },
          "gas": {
            "type": "boolean"
          },
          "healthy": {
            "type": "boolean"
          },
          "height": {
            "type": "integer"
          },
          "mode": {
            "type": "string"
          },
          "peer_count": {
            "type": "integer"
          },
          "syncing": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "listMigrationsResponse": {
        "type": "object",
        "properties": {
          "migrations": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/migration"
            }
          }
        }
      },
      "listPendingConsensusUpdatesResponse": {
        "type": "object",
        "properties": {
          "proposals": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/consensusParamUpdateProposal"
            }
          }
        }
      },
      "migration": {
        "type": "object",
        "properties": {
          "activation_height": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "migration_duration": {
            "type": "integer"
          },
          "timestamp": {
            "type": "string"
          }
        }
      },
      "migrationMetadata": {
        "type": "object",
        "properties": {
          "genesis_info": {
            "type": "object",
            "$ref": "#/components/schemas/genesisInfo"
          },
          "migration_state": {
            "type": "object",
            "$ref": "#/components/schemas/migrationState"
          },
          "snapshot_metadata": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          }
        }
      },
      "migrationMetadataResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "$ref": "#/components/schemas/migrationMetadata"
          }
        }
      },
      "migrationSnapshotChunkResponse": {
        "type": "object",
        "properties": {
          "chunk": {
            "type": "string"
          }
        }
      },
      "migrationState": {
        "type": "object",
        "properties": {
          "chain_height": {
            "type": "integer"
          },
          "end_height": {
            "type": "integer"
          },
          "start_height": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "migrationStatusResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "$ref": "#/components/schemas/migrationState"
          }
        }
      },
      "namedValue": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Value": {
            "type": "object",
            "$ref": "#/components/schemas/encodedValue"
          }
        }
      },
      "numAccountsResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "height": {
            "type": "integer"
          }
        }
      },
      "pingResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "queryResponse": {
        "type": "object",
        "properties": {
          "column_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "column_types": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/dataType"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "queryResult": {
        "type": "object",
        "properties": {
          "column_names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "column_types": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/dataType"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        }
      },
      "rawStatement": {
        "type": "object",
        "properties": {
          "Parameters": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/namedValue"
            }
          },
          "Statement": {
            "type": "string"
          }
        }
      },
      "signature": {
        "type": "object",
        "properties": {
          "sig": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "transaction": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "$ref": "#/components/schemas/transactionBody"
          },
          "cachedHash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "sender": {
            "type": "string"
          },
          "serialization": {
            "type": "string"
          },
          "signature": {
            "type": "object",
            "$ref": "#/components/schemas/signature"
          },
          "strictUnmarshal": {
            "type": "boolean"
          }
        }
      },
      "transactionBody": {
        "type": "object",
        "properties": {
          "chain_id": {
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          },
          "nonce": {
            "type": "integer"
          },
          "payload": {
            "type": "string"
          },
          "strictUnmarshal": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "txQueryResponse": {
        "type": "object",
        "properties": {
          "height": {
            "type": "integer"
          },
          "tx": {
            "type": "object",
            "$ref": "#/components/schemas/transaction"
          },
          "tx_hash": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "tx_result": {
            "type": "object",
            "$ref": "#/components/schemas/txResult"
          }
        }
      },
      "txResult": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/event"
            }
          },
          "gas": {
            "type": "integer"
          },
          "log": {
            "type": "string"
          }
        }
      },
      "validator": {
        "type": "object",
        "properties": {
          "AccountID": {
            "type": "object",
            "$ref": "#/components/schemas/accountID"
          },
          "identifier": {
            "type": "string"
          },
          "key_type": {
            "type": "string"
          },
          "power": {
            "type": "integer"
          }
        }
      },
      "versionResponse": {
        "type": "object",
        "properties": {
          "api_ver": {
            "type": "string"
          },
          "kwil_ver": {
            "type": "string"
          },
          "major": {
            "type": "integer"
          },
          "minor": {
            "type": "integer"
          },
          "patch": {
            "type": "integer"
          },
          "service": {
            "type": "string"
          }
        }
      }
    }
  }
}
