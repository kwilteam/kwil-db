package atomic

import "github.com/kwilteam/kwil-db/pkg/engine/types"

// changeTracker is an interface for a type that tracks changes that were made to the database
type changeTracker interface {
	// TrackChange tracks a change that was made to the database
	TrackChange(change change)

	// IsTrackingChanges returns whether or not changes are being tracked
	IsTrackingChanges() bool
}

// nilChangeTracker is a change tracker that does nothing
// it is used when changes are not being tracked
type nilChangeTracker struct{}

func (n *nilChangeTracker) TrackChange(_ change) {}

func (n *nilChangeTracker) IsTrackingChanges() bool {
	return false
}

var _ changeTracker = (*nilChangeTracker)(nil)

func newTransactionChangeTracker() *transactionChangeTracker {
	return &transactionChangeTracker{
		changes: make([]change, 0),
	}
}

// transactionChangeTracker is a change tracker that tracks changes for a transaction
type transactionChangeTracker struct {
	changes []change
}

func (t *transactionChangeTracker) TrackChange(c change) {
	t.changes = append(t.changes, c)
}

func (t *transactionChangeTracker) IsTrackingChanges() bool {
	return true
}

var _ changeTracker = (*transactionChangeTracker)(nil)

// change is an interface for a change that was made to the database
type change interface {
	Type() changeType
	DBID() string
}

// datasetId is a type that represents a dataset id
type datasetId string

func (d datasetId) DBID() string {
	return string(d)
}

// changes:

// datasetCreationChange is a change that represents the creation of a dataset
type datasetCreationChange struct {
	datasetId
}

func (c *datasetCreationChange) Type() changeType {
	return createDataset
}

var _ change = (*datasetCreationChange)(nil)

// datasetDeletionChange is a change that represents the deletion of a dataset
type datasetDeletionChange struct {
	datasetId
}

func (c *datasetDeletionChange) Type() changeType {
	return deleteDataset
}

var _ change = (*datasetDeletionChange)(nil)

// tableCreationChange is a change that represents the creation of a table
type tableCreationChange struct {
	datasetId
	// table is the table to be created
	Table *types.Table
}

func (c *tableCreationChange) Type() changeType {
	return createTable
}

var _ change = (*tableCreationChange)(nil)

// executionChange is a change that represents the execution of a statement
type executionChange struct {
	datasetId
	// Changeset is the changeset that was generated by the execution
	Changeset []byte
}

func (c *executionChange) Type() changeType {
	return executeStatement
}

var _ change = (*executionChange)(nil)

type changeType uint8

const (
	createDataset changeType = iota
	deleteDataset
	createTable
	executeStatement
)
