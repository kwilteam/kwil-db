version: "3"

services:
  # TODO: generate correspond number of nodes by configuration
  new-node0:
    image: {{ .DockerImage }}
    ports:
      - "{{with .ExposedRPCPorts}}{{index . 0}}:{{end}}8484"
      - "{{with .ExposedRPCPorts}}{{index . 0 | plus 100}}:{{end}}8584"
      - "6600"
    #env_file:
      # NOTE: docker compose by default will use `.env` file if presented
    environment:
      GORACE: "halt_on_error=1 log_path=/app/kwil/datarace"
    volumes:
      - type: bind
        source: ${KWIL_HOME:-./.testnet}/new-node0
        target: /app/kwil
    networks:
      - {{ .Network }}
    depends_on:
      new-pg0:
        condition: service_healthy
    command: |
      --root=/app/kwil
      --log-format=plain
      --log-level=${LOG_LEVEL:-info}
      --admin.listen=/tmp/admin.socket
      --p2p.ip=0.0.0.0
      --p2p.port=6600
      --db.host=new-pg0
      --db.port=5432
      --db.user=kwild
      --db.pass=kwild
    healthcheck:
      test: ["CMD", "curl", "--fail-with-body", "-s", "http://127.0.0.1:8484/api/v1/health/user"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-pg0:
    image: kwildb/postgres:16.5-1
    ports:
      - "5432"
    restart: always
    user: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --data-checksums
    networks:
      - {{ .Network }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 && sleep 1"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-node1:
    image: {{ .DockerImage }}
    ports:
      - "{{with .ExposedRPCPorts}}{{index . 1}}:{{end}}8484"
      - "{{with .ExposedRPCPorts}}{{index . 1 | plus 100}}:{{end}}8584"
      - "6600"
    environment:
      GORACE: "halt_on_error=1 log_path=/app/kwil/datarace"
    volumes:
      - type: bind
        source: ${KWIL_HOME:-./.testnet}/new-node1
        target: /app/kwil
    networks:
      - {{ .Network }}
    depends_on:
      new-pg1:
        condition: service_healthy
    command: |
      --root=/app/kwil
      --log-format=plain
      --log-level=${LOG_LEVEL:-info}
      --admin.listen=/tmp/admin.socket
      --p2p.ip=0.0.0.0
      --p2p.port=6600
      --db.host=new-pg1
      --db.port=5432
      --db.user=kwild
      --db.pass=kwild
    healthcheck:
      test: ["CMD", "curl", "--fail-with-body", "-s", "http://127.0.0.1:8484/api/v1/health/user"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-pg1:
    image: kwildb/postgres:16.5-1
    ports:
      - "5432"
    restart: always
    user: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --data-checksums
    networks:
      - {{ .Network }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 && sleep 1"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-node2:
    image: {{ .DockerImage }}
    ports:
      - "{{with .ExposedRPCPorts}}{{index . 2}}:{{end}}8484"
      - "{{with .ExposedRPCPorts}}{{index . 2 | plus 100}}:{{end}}8584"
      - "6600"
    environment:
      GORACE: "halt_on_error=1 log_path=/app/kwil/datarace"
    volumes:
      - type: bind
        source: ${KWIL_HOME:-./.testnet}/new-node2
        target: /app/kwil
    networks:
      - {{ .Network }}
    depends_on:
      new-pg2:
        condition: service_healthy
    command: |
      --root=/app/kwil
      --log-format=plain
      --log-level=${LOG_LEVEL:-info}
      --admin.listen=/tmp/admin.socket
      --p2p.ip=0.0.0.0
      --p2p.port=6600
      --db.host=new-pg2
      --db.port=5432
      --db.user=kwild
      --db.pass=kwild
    healthcheck:
      test: ["CMD", "curl", "--fail-with-body", "-s", "http://127.0.0.1:8484/api/v1/health/user"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-pg2:
    image: kwildb/postgres:16.5-1
    ports:
      - "5432"
    restart: always
    user: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --data-checksums
    networks:
      - {{ .Network }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 && sleep 1"]
      interval: 2s
      timeout: 6s
      retries: 10

  # This node is used to test the scenario where new node join the network & sync the blocks
  new-node3:
    image: {{ .DockerImage }}
    ports:
      - "{{with .ExposedRPCPorts}}{{index . 3}}:{{end}}8484"
      - "{{with .ExposedRPCPorts}}{{index . 3 | plus 100}}:{{end}}8584"
      - "6600"
    environment:
      GORACE: "halt_on_error=1 log_path=/app/kwil/datarace"
    volumes:
      - type: bind
        source: ${KWIL_HOME:-./.testnet}/new-node3
        target: /app/kwil
    networks:
      - {{ .Network }}
    depends_on:
      new-pg3:
        condition: service_healthy
    command: |
      --root=/app/kwil
      --log-format=plain
      --log-level=${LOG_LEVEL:-info}
      --admin.listen=/tmp/admin.socket
      --p2p.ip=0.0.0.0
      --p2p.port=6600
      --db.host=new-pg3
      --db.port=5432
      --db.user=kwild
      --db.pass=kwild
    healthcheck:
      test: ["CMD-SHELL", "/app/kwil-cli utils chain-info"]
      interval: 2s
      timeout: 6s
      retries: 10

  new-pg3:
    image: kwildb/postgres:16.5-1
    ports:
      - "5432"
    restart: always
    user: postgres
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: --data-checksums
    networks:
      - {{ .Network }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h 127.0.0.1 && sleep 1"]
      interval: 2s
      timeout: 6s
      retries: 10

networks:
  {{ .Network }}:
    external: true
