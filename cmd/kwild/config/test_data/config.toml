# This is a TOML config file.
# For more information, see https://github.com/toml-lang/toml

# NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
# relative to the root directory (e.g. "data"). The root directory is
# "$HOME/.kwild" by default, but could be changed via $KWILD_HOME env variable
# or via --home command line flag.
# Order of preference: command line flag, env variable, default value.

# Root Directory Structure:
# RootDir/
#   |- config.toml    (app and chain configuration for running the kwild node)
#   |- abci/
#   |   |- config/
#   |   |   |- genesis.json   (genesis file for the network)
#   |   |   |- addrbook.json  (peer routable addresses for the kwild node)
#   |   |- data/
#   |   |   |- blockchain db files/dir (blockstore.db, state.db, etc)
#   |   |- info/            
#   |- application/wal         
#   |- snapshots/
#   |- signing/
#   |- rcvdSnaps/   (includes the chunks rcvd from the state sync module during db restoration process, its a temp dir)

# Only the config.toml and genesis file are required to run the kwild node in rootDir/abci/config
# The rest of the files & directories are created by the kwild node on startup

#######################################################################
###                      App Config Options                         ###
#######################################################################

[app]

# TCP address for the KWILD App's JSON-RPC server to listen on
jsonrpc_listen_addr = "192.168.1.1:8484"

# Unix socket or TCP address for the KWILD App's Admin GRPC server to listen on
admin_listen_addr="127.0.0.1:8585"

# Timeout on requests on the user RPC servers
rpc_timeout = "45s"

# Timeout on database reads initiated by the user RPC service
db_read_timeout = "5s"

# RPC request size limit in bytes
rpc_max_req_size = 4200000

# Enforce data privacy: authenticate JSON-RPC call requests using challenge-based
# authentication. the node will only accept JSON-RPC requests that has a valid signed
# challenge response. This also disables ad hoc queries, and no raw transaction retrieval.
private_rpc = false

# Time after which a "call" challenge expires.
challenge_expiry = "10s"

# Call challenge request rate limit per second per client IP.
challenge_rate_limit = 10.0

# List of Extension endpoints to be enabled ex: ["localhost:50052", "169.198.102.34:50053"]
extension_endpoints = ["localhost:50052", "localhost:50053", "localhost:50054"]

# PostgreSQL database host (UNIX socket path or IP address with no port)
pg_db_host = "127.0.0.1"

# PostgreSQL database port (may be omitted for UNIX socket hosts)
pg_db_port = "5432"

# PostgreSQL database user (should be a "superuser")
pg_db_user = "kwild"

# PostgreSQL database pass (may be omitted for some pg_hba.conf configurations)
pg_db_pass = ""

# PostgreSQL database name (override database name, default is "kwild")
pg_db_name = "kwild"

# The admin RPC server can require a password, if set. Ensure the connection is
# encrypted since the password is sent unencrypted in the HTTP Authorization
# header. Not needed if client authentication is done with mutual TLS (clients.pem).
# admin_pass = pwssword

# Disable TLS on the admin service server. It is automatically disabled for a
# UNIX socket or loopback TCP listen address. This setting can disable it for
# any TCP listen address.
# admin_notls = true

# The path to a file containing certificate that is used to create the admin HTTPS server.
# It may be either an absolute path or a path related to the kwild root directory.
# If set, admin_tls_cert_file must also be set.
# If unset, an HTTP server is run.
admin_tls_cert_file = "somewhere.cert"

# The path to a file containing matching private key that is used to create the admin HTTPS server.
# It may be either an absolute path or a path related to the kwild root directory.
# If set, admin_tls_cert_file must also be set.
# If unset, an HTTP server is run.
admin_tls_key_file = "somewhere.key"

# Kwild Server hostname
hostname = ""

#######################################################################
###                Snapshot store Config Options                    ###
#######################################################################
[app.snapshots]

# Enables snapshots
enable = false

# Path to the snapshots directory
# Might be either absolute path or path related to the kwild root directory.
snapshot_dir = "snapshots"

# Specifies the block heights(multiples of recurring_height) at which the snapshot should be taken
recurring_height = 10000

# Maximum number of snapshots to store
max_snapshots = 3

max_row_size = 4194304
#######################################################################
###                    Logging Config Options                       ###
#######################################################################
[log]
# Output level for logging, default is "info". Other options are "debug", "error", "warn", "trace"
level = "debug"

# RPC systems' logging level. Must be higher than log.level.
rpc_level = "info"

# Consensus engine's logging level. Must be higher than log.level.
consensus_level = "warn"

# DB driver's logging level. Must be higher than log.level.
db_level = "info"

# Output paths for the logger, can be stdout or a file path
output_paths = ["stdout"]

# The threshold in KB at which the log file rolls over and archives
# the current one as a numbered gz file.
file_roll_size = 123000

# The retention limit on the number of archived log files to keep. After this is
# reached, the oldest are deleted. 0 means no limit (retain all).
retain_max_rolls = 6

# Output format: 'plain' or 'json'
format = "plain"

# Time format: "epochfloat" (default), "epochmilli", or "rfc3339milli"
# time_format = "epochfloat"

#######################################################################
###                 Chain  Main Base Config Options                 ###
#######################################################################
[chain]
# A custom human readable name for this node
moniker = "CAF80E6A4EBD1148"

#######################################################################
###                 Advanced Configuration Options                  ###
#######################################################################

#######################################################
###       RPC Server Configuration Options          ###
#######################################################
[chain.rpc]

# TCP or UNIX socket address for the RPC server to listen on
laddr = "tcp://0.0.0.0:26657"

# Maximum number of simultaneous connections (including WebSocket).
# If you want to accept a larger number than the default, make sure
# you increase your OS limits.
# 0 - unlimited.
# Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
# 1024 - 40 - 10 - 50 = 924 = ~900
max_open_connections = 900

# How long to wait for a tx to be committed during /broadcast_tx_commit.
# WARNING: Using a value larger than 10s will result in increasing the
# global HTTP write timeout, which applies to all connections and endpoints.
# See https://github.com/tendermint/tendermint/issues/3435
timeout_broadcast_tx_commit = "10s"

#######################################################
###         Consensus Configuration Options         ###
#######################################################
[chain.consensus]
# How long we wait for a proposal block before prevoting nil
timeout_propose = "3s"
# How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
timeout_prevote = "2s"
# How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
timeout_precommit = "2s"
# How long we wait after committing a block, before starting on the new
# height (this gives us a chance to receive some more precommits, even
# though we already have +2/3).
timeout_commit = "6s"

#######################################################
###           P2P Configuration Options             ###
#######################################################
[chain.p2p]

# Address to listen for incoming connections
laddr = "tcp://0.0.0.0:26656"

# Address to advertise to peers for them to dial
# If empty, will use the same port as the laddr,
# and will introspect on the listener or use UPnP
# to figure out the address. ip and port are required
# example: 159.89.10.97:26656
external_address = ""

# Comma separated list of nodes to keep persistent connections to (used for bootstrapping)
persistent_peers = "d128266b8b9f64c313de466cf29e0a6182dba54d@172.10.100.2:26656,9440f4a8059cf7ff31454973c4f9c68de65fe526@172.10.100.3:26656,87ee0b2008459ad73e3e8df4f4614265507a7085@172.10.100.4:26656"

# Set true for strict address routability rules
# Set false for private or local networks
addr_book_strict = false

# Maximum number of inbound peers
max_num_inbound_peers = 40

# Maximum number of outbound peers to connect to, excluding persistent peers
max_num_outbound_peers = 10
  
# List of node IDs, to which a connection will be (re)established ignoring any existing limits
unconditional_peer_ids = ""

# Toggle to disable guard against peers connecting from the same ip.
allow_duplicate_ip = true

# Enable gossiping of peer information
pex = true

# Seed nodes used to obtain peer addresses. Only used if the peers in the
# address book are unreachable.
seeds = ""

# Seed mode, in which node constantly crawls the network and looks for
# peers. If another node asks it for addresses, it responds and disconnects.
#
# Requires peer-exchange to be enabled.
seed_mode = false

#######################################################
###          Mempool Configuration Options          ###
#######################################################
[chain.mempool]
# Maximum number of transactions in the mempool
size = 50000

# Limit the total size of all txs in the mempool.
# This only accounts for raw transactions (e.g. given 1MB transactions and
# max_txs_bytes=5MB, mempool will only accept 5 transactions).
max_txs_bytes = 536870912

# Limit the size of any one transaction in mempool.
max_tx_bytes = 4194304

# Size of the cache (used to filter transactions we saw earlier) in transactions
cache_size = 60000

#######################################################
###         State Sync Configuration Options        ###
#######################################################
[chain.statesync]
# State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
# snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
# the network to take and serve state machine snapshots. State sync is not attempted if the node
# has any local state (LastBlockHeight > 0). The node will have a truncated block history,
# starting from the height of the snapshot.
enable = false

# SnapshotDir is the directory to store the received snapshot chunks.
# Might be either absolute path or path related to the kwild root directory.
snapshot_dir = "rcvdSnaps"

# Trusted snapshot providers (comma-separated chain RPC servers) are the source-of-truth for the snapshot integrity.
# Snapshots are accepted for statesync only after verifying the snapshot metadata (snapshot hash, chunk count, height etc.) 
# with these trusted snapshot providers. At least 1 trusted snapshot provider is required for enabling state sync.
rpc_servers = "http://localhost:26657"

# Time spent discovering snapshots before offering the best(latest) snapshot to the application.
# If no snapshots are discovered, the node will redo the discovery process until snapshots are found.
# If network has no snapshots, restart the node with state sync disabled to sync with the network.
# Current default is 15s, as only snapshot metadata is requested in the discovery process. 
# Adjust this value according to the network latencies of your peers.
discovery_time = "15s"

# The timeout duration before re-requesting a chunk, possibly from a different
# peer (default: 1 minute), if the current peer is unresponsive to the chunk request.
chunk_request_timeout = "10s"

# Note: If the requested chunk is not received for a duration of 2 minutes (hard-coded default), 
# the state sync process is aborted and the node will fall back to the regular block sync process.
trust_period = "1h"

[instrumentation]

# collect and serve are served under /metrics
prometheus = true

# listen address for prometheus metrics
prometheus_listen_addr = "9.8.7.6:20660"

# Maximum number of simultaneous connections.
# 0 - unlimited.
max_open_connections = 6
