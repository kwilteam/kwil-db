version: "3"

includes:
  #note: actual execute directory is the root of the project
  pb: ./api/

tasks:
  default:
    cmds:
      - task -l

  install:deps:
    desc: Install tools required to build this app
    cmds:
      - cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go install %

  git:init:
    desc: Initialize git submodules
    cmds:
      - git submodule update --init

  git:sync:
    desc: Sync git submodules
    cmds:
      - git submodule update --remote

  init:
    desc: Initialize the project
    deps: [install:deps, git:init]
    cmds:
      - go mod download

  build:
    desc: Build cli & kwild
    cmds:
      - task: build:cli
      - task: build:kwild

  build:cli:
    desc: Build kwil-cli
    deps: [pb:compile:v1, build:antlr]
    cmds:
      - ./scripts/build/binary kwil-cli
    generates:
      - .build/kwil-cli

  build:kwild:
    desc: Builds kwild server
    deps: [pb:compile:v1, build:antlr]
    cmds:
      - ./scripts/build/binary kwild
    generates:
      - .build/kwild

  build:antlr:
    desc: Generate antlr parser code
    cmds:
      - rm -rf ./pkg/{kfgrammar,sqlgrammar}/go.mod       #need for replacing submodule package
      - rm -rf ./pkg/{kfgrammar,sqlgrammar}/*.go
      - rm -rf ./pkg/{kfgrammar,sqlgrammar}/*.tokens
      - rm -rf ./pkg/{kfgrammar,sqlgrammar}/*.interp
      - cd ./pkg/kfgrammar && go mod init kfgrammar && ./generate.sh
      - cd ./pkg/sqlgrammar && go mod init sqlgrammar && ./generate.sh
    sources:
      - ./pkg/{kfgrammar,sqlgrammar}/*.g4
    generates:
      - ./pkg/{kfgrammar,sqlgrammar}/*.go
      - ./pkg/{kfgrammar,sqlgrammar}/*.tokens
      - ./pkg/{kfgrammar,sqlgrammar}/*.interp
      - ./pkg/{kfgrammar,sqlgrammar}/go.mod

  build:abi:
    desc: Builds Golang bindings for EVM contract ABIs
    internal: true
    cmds:
      - abigen --abi ./pkg/chain/contracts/escrow/evm/abi/escrow.json --bin ./pkg/chain/contracts/escrow/evm/abi/escrow.bin --pkg abi --type Escrow --out ./pkg/chain/contracts/escrow/evm/abi/escrow.go
      - abigen --abi ./pkg/chain/contracts/token/evm/abi/erc20.json --bin ./pkg/chain/contracts/token/evm/abi/erc20.bin --pkg abi --type Erc20 --out ./pkg/chain/contracts/token/evm/abi/erc20.go
    sources:
      - ./pkg/chain/contracts/*/evm/abi/*.json
      - ./pkg/chain/contracts/*/evm/abi/*.bin
    generates:
      - ./pkg/chain/contracts/*/evm/abi/*.go

  # ************ docker ************
  build:docker:
    desc: Build the docker image for the kwild
    deps: [ pb:compile:v1, build:antlr ]
    cmds:
      # pass any args to build debug image, e.g. task docker:kwild -- debug
      - ./scripts/build/docker kwild  {{.VARIANT}}

  # ************ dev ************
  dev:up:
    desc: Start the dev environment
    deps:
      - task: build:docker
        vars: {VARIANT: "shell"}
    cmds:
      - go test ./test/acceptance/ -timeout 12h -dev -v

  # ************ test ************
  test:act:
    desc: Run acceptance tests
    deps: [ build:docker]
    cmds:
      - go test ./test/acceptance/ -v

  test:unit:
    desc: Run unit tests
    cmds:
      - go test `go list ./... | grep -v /kwil-db\/test/` -count=1
