version: "3"

includes:
  #note: actual execute directory is the root of the project
  pb: ./api/

tasks:
  default:
    cmds:
      - task: build

  deps:
    desc: Install tools required to build this app
    cmds:
      - cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go install %

  build:
    desc: Builds the project
    cmds:
      - task: build:cli
      - task: build:kwild
      - task: build:gateway

  build:cli:
    desc: Builds the kwil-cli
    vars:
      DATE:
        sh: date
      GOVERSION:
        sh: go version
      PREFIX: kwil/cmd/kwil-cli/app/build
      VERSION:
        sh: git describe --match 'v[0-9]*' --dirty --always --tags | sed 's/^v//' 2>/dev/null || echo "unknown-version"
      GITCOMMIT:
         sh: git rev-list -1 HEAD
      BUILDTIME:
        sh: date -u +%Y-%m-%dT%H:%M:%SZ
    cmds:
      - go build -ldflags="-X '{{ .PREFIX }}.Version={{ .VERSION }}' -X '{{ .PREFIX }}.GitCommit={{ .GITCOMMIT }}' -X '{{ .PREFIX }}.BuildTime={{ .BUILDTIME }}'" -o .build/kwil-cli ./cmd/kwil-cli
    generates:
      - .build/kwil-cli

  build:kwild:
    desc: Builds the kwil grpc server
    deps: [pb:compile:all]
    cmds:
      - go build -o .build/kwild ./cmd/kwild
    generates:
      - .build/kwild

  build:sql:
    desc: Generates the SQL repository
    cmds:
      - sqlc generate
    sources:
      - kwil/sql/*.sql
    generates:
      - kwil/repository/gen

  build:gateway:
    desc: Builds the API Gateway
    deps: [ pb:compile:all ]
    cmds:
      - go build -o .build/kwil-gateway ./cmd/kwil-gateway
    generates:
      - .build/kwil-gateway

  build:abi:
    desc: Builds Golang bindings for EVM contract ABIs
    cmds:
      - abigen --abi ./pkg/chain/contracts/escrow/evm/abi/escrow.json --bin ./pkg/chain/contracts/escrow/evm/abi/escrow.bin --pkg abi --type Escrow --out ./pkg/chain/contracts/escrow/evm/abi/escrow.go
      - abigen --abi ./pkg/chain/contracts/token/evm/abi/erc20.json --bin ./pkg/chain/contracts/token/evm/abi/erc20.bin --pkg abi --type Erc20 --out ./pkg/chain/contracts/token/evm/abi/erc20.go
    sources:
      - pkg/chain/contracts/*/evm/abi/*.json
      - pkg/chain/contracts/*/evm/abi/*.bin
    generates:
      - pkg/chain/contracts/*/evm/abi/*.go

  # ************ docker ************
  docker:gateway:
    desc: Build the docker image for kwil-gateway
    deps: [pb:compile:all]
    env:
      DOCKER_BUILDKIT: 1
    cmds:
      - docker build . -t kwil-gateway:latest -f ./build/package/docker/kwil-gateway.dockerfile

  docker:kwild:
    desc: Build the docker image for the kwild
    deps: [ pb:compile:all ]
    env:
      DOCKER_BUILDKIT: 1
    cmds:
      - docker build . -t kwild:latest -f ./build/package/docker/kwild.dockerfile

  #  ************ k8s ************
  # have dependencies on docker:kwild and docker:kwil, can't put this section in deployments/helm/Taskfile.yaml
  k8s:helm:update:
    desc: Update the helm charts
    cmds:
      - rm -rf deployments/helm/kwild/charts
      - rm -rf deployments/helm/kwil/charts
      - helm dependency update deployments/helm/hasura
      - helm dependency update deployments/helm/kwild
      - helm dependency update deployments/helm/kwil
    sources:
      - deployments/helm/**/*.yaml
      - deployments/helm/**/*.tpl
    generates:
      - deployments/helm/hasura/charts/*.tgz
      - deployments/helm/kwild/charts/*.tgz
      - deployments/helm/kwil/charts/*.tgz

  k8s:kwil:
    desc: Build and deploy kwil services to local k8s cluster
    cmds:
      - task: k8s:helm:update
      - task: pb:compile:all
      - task: docker:kwild
      - task: docker:gateway
      - helm install kwil deployments/helm/kwil -f deployments/helm/kwil/dev-values.yaml

  k8s:kwil:install:
    desc: Deploy kwil services to local k8s cluster
    deps:
      - k8s:helm:update
    cmds:
      - helm install kwil deployments/helm/kwil -f deployments/helm/kwil/dev-values.yaml

  k8s:kwil:uninstall:
    desc: Undploy kwil services to local k8s cluster
    cmds:
      - helm uninstall kwil

  k8s:kwild:
    desc: Build and deploy kwil to local k8s cluster
    cmds:
      - task: k8s:helm:update
      - task: pb:compile:all
      - task: docker:kwild
      - helm install kwild deployments/helm/kwild -f deployments/helm/kwild/dev-values.yaml

  k8s:kwild:install:
    desc: Deploy kwil to local k8s cluster
    deps:
      - k8s:helm:update
    cmds:
      - helm install kwild deployments/helm/kwild -f deployments/helm/kwild/dev-values.yaml

  k8s:kwild:uninstall:
    desc: Undeploy kwild to local k8s cluster
    cmds:
      - helm uninstall kwild
