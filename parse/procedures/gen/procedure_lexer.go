// Code generated from ProcedureLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package gen

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ProcedureLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ProcedureLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func procedurelexerLexerInit() {
	staticData := &ProcedureLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "';'", "'('", "')'", "'{'", "'}'", "','", "'::'", "':'", "'$'",
		"'@'", "':='", "'.'", "'['", "']'", "'''", "'_'", "'+'", "'-'", "'*'",
		"'/'", "'%'", "'<'", "'<='", "'>'", "'>='", "'!='", "'=='", "", "'for'",
		"'in'", "'if'", "'elseif'", "'else'", "'to'", "'return'", "'break'",
		"'next'", "", "", "", "", "", "'null'",
	}
	staticData.SymbolicNames = []string{
		"", "SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "TYPE_CAST",
		"COLON", "DOLLAR", "AT", "ASSIGN", "PERIOD", "LBRACKET", "RBRACKET",
		"SINGLE_QUOTE", "UNDERSCORE", "PLUS", "MINUS", "MUL", "DIV", "MOD",
		"LT", "LT_EQ", "GT", "GT_EQ", "NEQ", "EQ", "ANY_SQL", "FOR", "IN", "IF",
		"ELSEIF", "ELSE", "TO", "RETURN", "BREAK", "NEXT", "BOOLEAN_LITERAL",
		"INT_LITERAL", "FIXED_LITERAL", "BLOB_LITERAL", "TEXT_LITERAL", "NULL_LITERAL",
		"IDENTIFIER", "VARIABLE", "WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "TYPE_CAST",
		"COLON", "DOLLAR", "AT", "ASSIGN", "PERIOD", "LBRACKET", "RBRACKET",
		"SINGLE_QUOTE", "UNDERSCORE", "PLUS", "MINUS", "MUL", "DIV", "MOD",
		"LT", "LT_EQ", "GT", "GT_EQ", "NEQ", "EQ", "ANY_SQL", "FOR", "IN", "IF",
		"ELSEIF", "ELSE", "TO", "RETURN", "BREAK", "NEXT", "BOOLEAN_LITERAL",
		"INT_LITERAL", "FIXED_LITERAL", "BLOB_LITERAL", "TEXT_LITERAL", "NULL_LITERAL",
		"IDENTIFIER", "VARIABLE", "WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT",
		"WSNL", "SELECT_", "INSERT_", "UPDATE_", "DELETE_", "WITH_",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 49, 365, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1,
		8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18,
		1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 3, 27, 177, 8, 27, 1, 27, 1, 27, 4,
		27, 181, 8, 27, 11, 27, 12, 27, 182, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29,
		1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1,
		31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1,
		35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37,
		1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 3, 37, 237, 8, 37, 1, 38, 4, 38, 240,
		8, 38, 11, 38, 12, 38, 241, 1, 39, 4, 39, 245, 8, 39, 11, 39, 12, 39, 246,
		1, 39, 1, 39, 4, 39, 251, 8, 39, 11, 39, 12, 39, 252, 1, 40, 1, 40, 1,
		40, 1, 40, 4, 40, 259, 8, 40, 11, 40, 12, 40, 260, 1, 41, 1, 41, 1, 41,
		1, 41, 5, 41, 267, 8, 41, 10, 41, 12, 41, 270, 9, 41, 1, 41, 1, 41, 1,
		42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 5, 43, 281, 8, 43, 10, 43,
		12, 43, 284, 9, 43, 1, 44, 1, 44, 3, 44, 288, 8, 44, 1, 44, 1, 44, 1, 45,
		1, 45, 1, 45, 1, 45, 1, 46, 4, 46, 297, 8, 46, 11, 46, 12, 46, 298, 1,
		46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 307, 8, 47, 10, 47, 12, 47,
		310, 9, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1,
		48, 5, 48, 321, 8, 48, 10, 48, 12, 48, 324, 9, 48, 1, 48, 1, 48, 1, 49,
		4, 49, 329, 8, 49, 11, 49, 12, 49, 330, 1, 50, 1, 50, 1, 50, 1, 50, 1,
		50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 52,
		1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53, 1,
		53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 54, 1, 54, 1, 308, 0, 55, 1,
		1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47,
		95, 48, 97, 49, 99, 0, 101, 0, 103, 0, 105, 0, 107, 0, 109, 0, 1, 0, 27,
		2, 0, 59, 59, 123, 123, 2, 0, 70, 70, 102, 102, 2, 0, 79, 79, 111, 111,
		2, 0, 82, 82, 114, 114, 2, 0, 73, 73, 105, 105, 2, 0, 78, 78, 110, 110,
		2, 0, 69, 69, 101, 101, 2, 0, 76, 76, 108, 108, 2, 0, 83, 83, 115, 115,
		2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 66, 66, 98, 98, 2,
		0, 65, 65, 97, 97, 2, 0, 75, 75, 107, 107, 2, 0, 88, 88, 120, 120, 1, 0,
		48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 2, 0, 39, 39, 92, 92, 2, 0, 65,
		90, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10, 13, 13,
		3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 67, 67, 99, 99, 2, 0, 80, 80, 112, 112,
		2, 0, 68, 68, 100, 100, 2, 0, 87, 87, 119, 119, 2, 0, 72, 72, 104, 104,
		376, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0,
		0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1,
		0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23,
		1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0,
		31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0,
		0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0,
		0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0,
		0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1,
		0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69,
		1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0,
		77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0, 0,
		0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0, 0,
		0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1, 0, 0, 0, 1, 111, 1,
		0, 0, 0, 3, 113, 1, 0, 0, 0, 5, 115, 1, 0, 0, 0, 7, 117, 1, 0, 0, 0, 9,
		119, 1, 0, 0, 0, 11, 121, 1, 0, 0, 0, 13, 123, 1, 0, 0, 0, 15, 126, 1,
		0, 0, 0, 17, 128, 1, 0, 0, 0, 19, 130, 1, 0, 0, 0, 21, 132, 1, 0, 0, 0,
		23, 135, 1, 0, 0, 0, 25, 137, 1, 0, 0, 0, 27, 139, 1, 0, 0, 0, 29, 141,
		1, 0, 0, 0, 31, 143, 1, 0, 0, 0, 33, 145, 1, 0, 0, 0, 35, 147, 1, 0, 0,
		0, 37, 149, 1, 0, 0, 0, 39, 151, 1, 0, 0, 0, 41, 153, 1, 0, 0, 0, 43, 155,
		1, 0, 0, 0, 45, 157, 1, 0, 0, 0, 47, 160, 1, 0, 0, 0, 49, 162, 1, 0, 0,
		0, 51, 165, 1, 0, 0, 0, 53, 168, 1, 0, 0, 0, 55, 176, 1, 0, 0, 0, 57, 184,
		1, 0, 0, 0, 59, 188, 1, 0, 0, 0, 61, 191, 1, 0, 0, 0, 63, 194, 1, 0, 0,
		0, 65, 201, 1, 0, 0, 0, 67, 206, 1, 0, 0, 0, 69, 209, 1, 0, 0, 0, 71, 216,
		1, 0, 0, 0, 73, 222, 1, 0, 0, 0, 75, 236, 1, 0, 0, 0, 77, 239, 1, 0, 0,
		0, 79, 244, 1, 0, 0, 0, 81, 254, 1, 0, 0, 0, 83, 262, 1, 0, 0, 0, 85, 273,
		1, 0, 0, 0, 87, 278, 1, 0, 0, 0, 89, 287, 1, 0, 0, 0, 91, 291, 1, 0, 0,
		0, 93, 296, 1, 0, 0, 0, 95, 302, 1, 0, 0, 0, 97, 316, 1, 0, 0, 0, 99, 328,
		1, 0, 0, 0, 101, 332, 1, 0, 0, 0, 103, 339, 1, 0, 0, 0, 105, 346, 1, 0,
		0, 0, 107, 353, 1, 0, 0, 0, 109, 360, 1, 0, 0, 0, 111, 112, 5, 59, 0, 0,
		112, 2, 1, 0, 0, 0, 113, 114, 5, 40, 0, 0, 114, 4, 1, 0, 0, 0, 115, 116,
		5, 41, 0, 0, 116, 6, 1, 0, 0, 0, 117, 118, 5, 123, 0, 0, 118, 8, 1, 0,
		0, 0, 119, 120, 5, 125, 0, 0, 120, 10, 1, 0, 0, 0, 121, 122, 5, 44, 0,
		0, 122, 12, 1, 0, 0, 0, 123, 124, 5, 58, 0, 0, 124, 125, 5, 58, 0, 0, 125,
		14, 1, 0, 0, 0, 126, 127, 5, 58, 0, 0, 127, 16, 1, 0, 0, 0, 128, 129, 5,
		36, 0, 0, 129, 18, 1, 0, 0, 0, 130, 131, 5, 64, 0, 0, 131, 20, 1, 0, 0,
		0, 132, 133, 5, 58, 0, 0, 133, 134, 5, 61, 0, 0, 134, 22, 1, 0, 0, 0, 135,
		136, 5, 46, 0, 0, 136, 24, 1, 0, 0, 0, 137, 138, 5, 91, 0, 0, 138, 26,
		1, 0, 0, 0, 139, 140, 5, 93, 0, 0, 140, 28, 1, 0, 0, 0, 141, 142, 5, 39,
		0, 0, 142, 30, 1, 0, 0, 0, 143, 144, 5, 95, 0, 0, 144, 32, 1, 0, 0, 0,
		145, 146, 5, 43, 0, 0, 146, 34, 1, 0, 0, 0, 147, 148, 5, 45, 0, 0, 148,
		36, 1, 0, 0, 0, 149, 150, 5, 42, 0, 0, 150, 38, 1, 0, 0, 0, 151, 152, 5,
		47, 0, 0, 152, 40, 1, 0, 0, 0, 153, 154, 5, 37, 0, 0, 154, 42, 1, 0, 0,
		0, 155, 156, 5, 60, 0, 0, 156, 44, 1, 0, 0, 0, 157, 158, 5, 60, 0, 0, 158,
		159, 5, 61, 0, 0, 159, 46, 1, 0, 0, 0, 160, 161, 5, 62, 0, 0, 161, 48,
		1, 0, 0, 0, 162, 163, 5, 62, 0, 0, 163, 164, 5, 61, 0, 0, 164, 50, 1, 0,
		0, 0, 165, 166, 5, 33, 0, 0, 166, 167, 5, 61, 0, 0, 167, 52, 1, 0, 0, 0,
		168, 169, 5, 61, 0, 0, 169, 170, 5, 61, 0, 0, 170, 54, 1, 0, 0, 0, 171,
		177, 3, 101, 50, 0, 172, 177, 3, 103, 51, 0, 173, 177, 3, 105, 52, 0, 174,
		177, 3, 107, 53, 0, 175, 177, 3, 109, 54, 0, 176, 171, 1, 0, 0, 0, 176,
		172, 1, 0, 0, 0, 176, 173, 1, 0, 0, 0, 176, 174, 1, 0, 0, 0, 176, 175,
		1, 0, 0, 0, 177, 178, 1, 0, 0, 0, 178, 180, 3, 99, 49, 0, 179, 181, 8,
		0, 0, 0, 180, 179, 1, 0, 0, 0, 181, 182, 1, 0, 0, 0, 182, 180, 1, 0, 0,
		0, 182, 183, 1, 0, 0, 0, 183, 56, 1, 0, 0, 0, 184, 185, 7, 1, 0, 0, 185,
		186, 7, 2, 0, 0, 186, 187, 7, 3, 0, 0, 187, 58, 1, 0, 0, 0, 188, 189, 7,
		4, 0, 0, 189, 190, 7, 5, 0, 0, 190, 60, 1, 0, 0, 0, 191, 192, 7, 4, 0,
		0, 192, 193, 7, 1, 0, 0, 193, 62, 1, 0, 0, 0, 194, 195, 7, 6, 0, 0, 195,
		196, 7, 7, 0, 0, 196, 197, 7, 8, 0, 0, 197, 198, 7, 6, 0, 0, 198, 199,
		7, 4, 0, 0, 199, 200, 7, 1, 0, 0, 200, 64, 1, 0, 0, 0, 201, 202, 7, 6,
		0, 0, 202, 203, 7, 7, 0, 0, 203, 204, 7, 8, 0, 0, 204, 205, 7, 6, 0, 0,
		205, 66, 1, 0, 0, 0, 206, 207, 7, 9, 0, 0, 207, 208, 7, 2, 0, 0, 208, 68,
		1, 0, 0, 0, 209, 210, 7, 3, 0, 0, 210, 211, 7, 6, 0, 0, 211, 212, 7, 9,
		0, 0, 212, 213, 7, 10, 0, 0, 213, 214, 7, 3, 0, 0, 214, 215, 7, 5, 0, 0,
		215, 70, 1, 0, 0, 0, 216, 217, 7, 11, 0, 0, 217, 218, 7, 3, 0, 0, 218,
		219, 7, 6, 0, 0, 219, 220, 7, 12, 0, 0, 220, 221, 7, 13, 0, 0, 221, 72,
		1, 0, 0, 0, 222, 223, 7, 5, 0, 0, 223, 224, 7, 6, 0, 0, 224, 225, 7, 14,
		0, 0, 225, 226, 7, 9, 0, 0, 226, 74, 1, 0, 0, 0, 227, 228, 7, 9, 0, 0,
		228, 229, 7, 3, 0, 0, 229, 230, 7, 10, 0, 0, 230, 237, 7, 6, 0, 0, 231,
		232, 7, 1, 0, 0, 232, 233, 7, 12, 0, 0, 233, 234, 7, 7, 0, 0, 234, 235,
		7, 8, 0, 0, 235, 237, 7, 6, 0, 0, 236, 227, 1, 0, 0, 0, 236, 231, 1, 0,
		0, 0, 237, 76, 1, 0, 0, 0, 238, 240, 7, 15, 0, 0, 239, 238, 1, 0, 0, 0,
		240, 241, 1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 241, 242, 1, 0, 0, 0, 242,
		78, 1, 0, 0, 0, 243, 245, 7, 15, 0, 0, 244, 243, 1, 0, 0, 0, 245, 246,
		1, 0, 0, 0, 246, 244, 1, 0, 0, 0, 246, 247, 1, 0, 0, 0, 247, 248, 1, 0,
		0, 0, 248, 250, 5, 46, 0, 0, 249, 251, 7, 15, 0, 0, 250, 249, 1, 0, 0,
		0, 251, 252, 1, 0, 0, 0, 252, 250, 1, 0, 0, 0, 252, 253, 1, 0, 0, 0, 253,
		80, 1, 0, 0, 0, 254, 255, 5, 48, 0, 0, 255, 256, 7, 14, 0, 0, 256, 258,
		1, 0, 0, 0, 257, 259, 7, 16, 0, 0, 258, 257, 1, 0, 0, 0, 259, 260, 1, 0,
		0, 0, 260, 258, 1, 0, 0, 0, 260, 261, 1, 0, 0, 0, 261, 82, 1, 0, 0, 0,
		262, 268, 3, 29, 14, 0, 263, 267, 8, 17, 0, 0, 264, 265, 5, 92, 0, 0, 265,
		267, 9, 0, 0, 0, 266, 263, 1, 0, 0, 0, 266, 264, 1, 0, 0, 0, 267, 270,
		1, 0, 0, 0, 268, 266, 1, 0, 0, 0, 268, 269, 1, 0, 0, 0, 269, 271, 1, 0,
		0, 0, 270, 268, 1, 0, 0, 0, 271, 272, 3, 29, 14, 0, 272, 84, 1, 0, 0, 0,
		273, 274, 7, 5, 0, 0, 274, 275, 7, 10, 0, 0, 275, 276, 7, 7, 0, 0, 276,
		277, 7, 7, 0, 0, 277, 86, 1, 0, 0, 0, 278, 282, 7, 18, 0, 0, 279, 281,
		7, 19, 0, 0, 280, 279, 1, 0, 0, 0, 281, 284, 1, 0, 0, 0, 282, 280, 1, 0,
		0, 0, 282, 283, 1, 0, 0, 0, 283, 88, 1, 0, 0, 0, 284, 282, 1, 0, 0, 0,
		285, 288, 3, 17, 8, 0, 286, 288, 3, 19, 9, 0, 287, 285, 1, 0, 0, 0, 287,
		286, 1, 0, 0, 0, 288, 289, 1, 0, 0, 0, 289, 290, 3, 87, 43, 0, 290, 90,
		1, 0, 0, 0, 291, 292, 3, 99, 49, 0, 292, 293, 1, 0, 0, 0, 293, 294, 6,
		45, 0, 0, 294, 92, 1, 0, 0, 0, 295, 297, 7, 20, 0, 0, 296, 295, 1, 0, 0,
		0, 297, 298, 1, 0, 0, 0, 298, 296, 1, 0, 0, 0, 298, 299, 1, 0, 0, 0, 299,
		300, 1, 0, 0, 0, 300, 301, 6, 46, 0, 0, 301, 94, 1, 0, 0, 0, 302, 303,
		5, 47, 0, 0, 303, 304, 5, 42, 0, 0, 304, 308, 1, 0, 0, 0, 305, 307, 9,
		0, 0, 0, 306, 305, 1, 0, 0, 0, 307, 310, 1, 0, 0, 0, 308, 309, 1, 0, 0,
		0, 308, 306, 1, 0, 0, 0, 309, 311, 1, 0, 0, 0, 310, 308, 1, 0, 0, 0, 311,
		312, 5, 42, 0, 0, 312, 313, 5, 47, 0, 0, 313, 314, 1, 0, 0, 0, 314, 315,
		6, 47, 0, 0, 315, 96, 1, 0, 0, 0, 316, 317, 5, 47, 0, 0, 317, 318, 5, 47,
		0, 0, 318, 322, 1, 0, 0, 0, 319, 321, 8, 20, 0, 0, 320, 319, 1, 0, 0, 0,
		321, 324, 1, 0, 0, 0, 322, 320, 1, 0, 0, 0, 322, 323, 1, 0, 0, 0, 323,
		325, 1, 0, 0, 0, 324, 322, 1, 0, 0, 0, 325, 326, 6, 48, 0, 0, 326, 98,
		1, 0, 0, 0, 327, 329, 7, 21, 0, 0, 328, 327, 1, 0, 0, 0, 329, 330, 1, 0,
		0, 0, 330, 328, 1, 0, 0, 0, 330, 331, 1, 0, 0, 0, 331, 100, 1, 0, 0, 0,
		332, 333, 7, 8, 0, 0, 333, 334, 7, 6, 0, 0, 334, 335, 7, 7, 0, 0, 335,
		336, 7, 6, 0, 0, 336, 337, 7, 22, 0, 0, 337, 338, 7, 9, 0, 0, 338, 102,
		1, 0, 0, 0, 339, 340, 7, 4, 0, 0, 340, 341, 7, 5, 0, 0, 341, 342, 7, 8,
		0, 0, 342, 343, 7, 6, 0, 0, 343, 344, 7, 3, 0, 0, 344, 345, 7, 9, 0, 0,
		345, 104, 1, 0, 0, 0, 346, 347, 7, 10, 0, 0, 347, 348, 7, 23, 0, 0, 348,
		349, 7, 24, 0, 0, 349, 350, 7, 12, 0, 0, 350, 351, 7, 9, 0, 0, 351, 352,
		7, 6, 0, 0, 352, 106, 1, 0, 0, 0, 353, 354, 7, 24, 0, 0, 354, 355, 7, 6,
		0, 0, 355, 356, 7, 7, 0, 0, 356, 357, 7, 6, 0, 0, 357, 358, 7, 9, 0, 0,
		358, 359, 7, 6, 0, 0, 359, 108, 1, 0, 0, 0, 360, 361, 7, 25, 0, 0, 361,
		362, 7, 4, 0, 0, 362, 363, 7, 9, 0, 0, 363, 364, 7, 26, 0, 0, 364, 110,
		1, 0, 0, 0, 16, 0, 176, 182, 236, 241, 246, 252, 260, 266, 268, 282, 287,
		298, 308, 322, 330, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ProcedureLexerInit initializes any static state used to implement ProcedureLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewProcedureLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ProcedureLexerInit() {
	staticData := &ProcedureLexerLexerStaticData
	staticData.once.Do(procedurelexerLexerInit)
}

// NewProcedureLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewProcedureLexer(input antlr.CharStream) *ProcedureLexer {
	ProcedureLexerInit()
	l := new(ProcedureLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ProcedureLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ProcedureLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProcedureLexer tokens.
const (
	ProcedureLexerSEMICOLON       = 1
	ProcedureLexerLPAREN          = 2
	ProcedureLexerRPAREN          = 3
	ProcedureLexerLBRACE          = 4
	ProcedureLexerRBRACE          = 5
	ProcedureLexerCOMMA           = 6
	ProcedureLexerTYPE_CAST       = 7
	ProcedureLexerCOLON           = 8
	ProcedureLexerDOLLAR          = 9
	ProcedureLexerAT              = 10
	ProcedureLexerASSIGN          = 11
	ProcedureLexerPERIOD          = 12
	ProcedureLexerLBRACKET        = 13
	ProcedureLexerRBRACKET        = 14
	ProcedureLexerSINGLE_QUOTE    = 15
	ProcedureLexerUNDERSCORE      = 16
	ProcedureLexerPLUS            = 17
	ProcedureLexerMINUS           = 18
	ProcedureLexerMUL             = 19
	ProcedureLexerDIV             = 20
	ProcedureLexerMOD             = 21
	ProcedureLexerLT              = 22
	ProcedureLexerLT_EQ           = 23
	ProcedureLexerGT              = 24
	ProcedureLexerGT_EQ           = 25
	ProcedureLexerNEQ             = 26
	ProcedureLexerEQ              = 27
	ProcedureLexerANY_SQL         = 28
	ProcedureLexerFOR             = 29
	ProcedureLexerIN              = 30
	ProcedureLexerIF              = 31
	ProcedureLexerELSEIF          = 32
	ProcedureLexerELSE            = 33
	ProcedureLexerTO              = 34
	ProcedureLexerRETURN          = 35
	ProcedureLexerBREAK           = 36
	ProcedureLexerNEXT            = 37
	ProcedureLexerBOOLEAN_LITERAL = 38
	ProcedureLexerINT_LITERAL     = 39
	ProcedureLexerFIXED_LITERAL   = 40
	ProcedureLexerBLOB_LITERAL    = 41
	ProcedureLexerTEXT_LITERAL    = 42
	ProcedureLexerNULL_LITERAL    = 43
	ProcedureLexerIDENTIFIER      = 44
	ProcedureLexerVARIABLE        = 45
	ProcedureLexerWS              = 46
	ProcedureLexerTERMINATOR      = 47
	ProcedureLexerBLOCK_COMMENT   = 48
	ProcedureLexerLINE_COMMENT    = 49
)
