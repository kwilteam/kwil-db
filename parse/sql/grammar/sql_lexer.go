// Code generated from SQLLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package grammar

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type SQLLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var SQLLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func sqllexerLexerInit() {
	staticData := &SQLLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "';'", "'.'", "'('", "')'", "','", "'='", "'*'", "'+'", "'-'", "'/'",
		"'%'", "'<'", "'<='", "'>'", "'>='", "'!='", "'<>'", "'::'", "'ADD'",
		"'ALL'", "'AND'", "'ASC'", "'AS'", "'BETWEEN'", "'BY'", "'CASE'", "'COLLATE'",
		"'COMMIT'", "'CONFLICT'", "'CREATE'", "'CROSS'", "'DEFAULT'", "'DELETE'",
		"'DESC'", "'DISTINCT'", "'DO'", "'ELSE'", "'END'", "'ESCAPE'", "'EXCEPT'",
		"'EXISTS'", "'FILTER'", "'FIRST'", "'FROM'", "'FULL'", "'GROUPS'", "'GROUP'",
		"'HAVING'", "'INNER'", "'INSERT'", "'INTERSECT'", "'INTO'", "'IN'",
		"'ISNULL'", "'IS'", "'JOIN'", "'LAST'", "'LEFT'", "'LIKE'", "'LIMIT'",
		"'NOTHING'", "'NOTNULL'", "'NOT'", "'NULLS'", "'OFFSET'", "'OF'", "'ON'",
		"'ORDER'", "'OR'", "'OUTER'", "'RAISE'", "'REPLACE'", "'RETURNING'",
		"'RIGHT'", "'SELECT'", "'SET'", "'THEN'", "'UNION'", "'UPDATE'", "'USING'",
		"'VALUES'", "'WHEN'", "'WHERE'", "'WITH'", "", "", "", "", "'null'",
	}
	staticData.SymbolicNames = []string{
		"", "SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR",
		"PLUS", "MINUS", "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "NOT_EQ1",
		"NOT_EQ2", "TYPE_CAST", "ADD_", "ALL_", "AND_", "ASC_", "AS_", "BETWEEN_",
		"BY_", "CASE_", "COLLATE_", "COMMIT_", "CONFLICT_", "CREATE_", "CROSS_",
		"DEFAULT_", "DELETE_", "DESC_", "DISTINCT_", "DO_", "ELSE_", "END_",
		"ESCAPE_", "EXCEPT_", "EXISTS_", "FILTER_", "FIRST_", "FROM_", "FULL_",
		"GROUPS_", "GROUP_", "HAVING_", "INNER_", "INSERT_", "INTERSECT_", "INTO_",
		"IN_", "ISNULL_", "IS_", "JOIN_", "LAST_", "LEFT_", "LIKE_", "LIMIT_",
		"NOTHING_", "NOTNULL_", "NOT_", "NULLS_", "OFFSET_", "OF_", "ON_", "ORDER_",
		"OR_", "OUTER_", "RAISE_", "REPLACE_", "RETURNING_", "RIGHT_", "SELECT_",
		"SET_", "THEN_", "UNION_", "UPDATE_", "USING_", "VALUES_", "WHEN_",
		"WHERE_", "WITH_", "BOOLEAN_LITERAL", "NUMERIC_LITERAL", "BLOB_LITERAL",
		"TEXT_LITERAL", "NULL_LITERAL", "IDENTIFIER", "BIND_PARAMETER", "SINGLE_LINE_COMMENT",
		"MULTILINE_COMMENT", "SPACES", "UNEXPECTED_CHAR",
	}
	staticData.RuleNames = []string{
		"SCOL", "DOT", "OPEN_PAR", "CLOSE_PAR", "COMMA", "ASSIGN", "STAR", "PLUS",
		"MINUS", "DIV", "MOD", "LT", "LT_EQ", "GT", "GT_EQ", "NOT_EQ1", "NOT_EQ2",
		"TYPE_CAST", "ADD_", "ALL_", "AND_", "ASC_", "AS_", "BETWEEN_", "BY_",
		"CASE_", "COLLATE_", "COMMIT_", "CONFLICT_", "CREATE_", "CROSS_", "DEFAULT_",
		"DELETE_", "DESC_", "DISTINCT_", "DO_", "ELSE_", "END_", "ESCAPE_",
		"EXCEPT_", "EXISTS_", "FILTER_", "FIRST_", "FROM_", "FULL_", "GROUPS_",
		"GROUP_", "HAVING_", "INNER_", "INSERT_", "INTERSECT_", "INTO_", "IN_",
		"ISNULL_", "IS_", "JOIN_", "LAST_", "LEFT_", "LIKE_", "LIMIT_", "NOTHING_",
		"NOTNULL_", "NOT_", "NULLS_", "OFFSET_", "OF_", "ON_", "ORDER_", "OR_",
		"OUTER_", "RAISE_", "REPLACE_", "RETURNING_", "RIGHT_", "SELECT_", "SET_",
		"THEN_", "UNION_", "UPDATE_", "USING_", "VALUES_", "WHEN_", "WHERE_",
		"WITH_", "BOOLEAN_LITERAL", "NUMERIC_LITERAL", "BLOB_LITERAL", "TEXT_LITERAL",
		"NULL_LITERAL", "IDENTIFIER", "BIND_PARAMETER", "SINGLE_LINE_COMMENT",
		"MULTILINE_COMMENT", "SPACES", "UNEXPECTED_CHAR",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 95, 736, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55, 2, 56, 7, 56, 2, 57,
		7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2, 61, 7, 61, 2, 62, 7,
		62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 2, 66, 7, 66, 2, 67, 7, 67,
		2, 68, 7, 68, 2, 69, 7, 69, 2, 70, 7, 70, 2, 71, 7, 71, 2, 72, 7, 72, 2,
		73, 7, 73, 2, 74, 7, 74, 2, 75, 7, 75, 2, 76, 7, 76, 2, 77, 7, 77, 2, 78,
		7, 78, 2, 79, 7, 79, 2, 80, 7, 80, 2, 81, 7, 81, 2, 82, 7, 82, 2, 83, 7,
		83, 2, 84, 7, 84, 2, 85, 7, 85, 2, 86, 7, 86, 2, 87, 7, 87, 2, 88, 7, 88,
		2, 89, 7, 89, 2, 90, 7, 90, 2, 91, 7, 91, 2, 92, 7, 92, 2, 93, 7, 93, 2,
		94, 7, 94, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1,
		15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18,
		1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23,
		1, 23, 1, 23, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27,
		1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 28, 1, 28, 1,
		28, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1,
		31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32, 1, 32,
		1, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1,
		38, 1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40,
		1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1,
		41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43,
		1, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1,
		45, 1, 45, 1, 45, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48, 1, 48, 1,
		48, 1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50,
		1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1,
		51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 53, 1, 53, 1, 54, 1, 54, 1, 54, 1, 55, 1, 55, 1, 55, 1, 55, 1,
		55, 1, 56, 1, 56, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 57, 1, 57,
		1, 58, 1, 58, 1, 58, 1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 59, 1, 59, 1,
		59, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 60, 1, 61, 1, 61,
		1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 61, 1, 62, 1, 62, 1, 62, 1, 62, 1,
		63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 63, 1, 64, 1, 64, 1, 64, 1, 64, 1, 64,
		1, 64, 1, 64, 1, 65, 1, 65, 1, 65, 1, 66, 1, 66, 1, 66, 1, 67, 1, 67, 1,
		67, 1, 67, 1, 67, 1, 67, 1, 68, 1, 68, 1, 68, 1, 69, 1, 69, 1, 69, 1, 69,
		1, 69, 1, 69, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 71, 1, 71, 1,
		71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 71, 1, 72, 1, 72, 1, 72, 1, 72, 1, 72,
		1, 72, 1, 72, 1, 72, 1, 72, 1, 72, 1, 73, 1, 73, 1, 73, 1, 73, 1, 73, 1,
		73, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 74, 1, 75, 1, 75, 1, 75,
		1, 75, 1, 76, 1, 76, 1, 76, 1, 76, 1, 76, 1, 77, 1, 77, 1, 77, 1, 77, 1,
		77, 1, 77, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 78, 1, 79, 1, 79,
		1, 79, 1, 79, 1, 79, 1, 79, 1, 80, 1, 80, 1, 80, 1, 80, 1, 80, 1, 80, 1,
		80, 1, 81, 1, 81, 1, 81, 1, 81, 1, 81, 1, 82, 1, 82, 1, 82, 1, 82, 1, 82,
		1, 82, 1, 83, 1, 83, 1, 83, 1, 83, 1, 83, 1, 84, 1, 84, 1, 84, 1, 84, 1,
		84, 1, 84, 1, 84, 1, 84, 1, 84, 3, 84, 628, 8, 84, 1, 85, 4, 85, 631, 8,
		85, 11, 85, 12, 85, 632, 1, 86, 1, 86, 1, 86, 1, 86, 4, 86, 639, 8, 86,
		11, 86, 12, 86, 640, 1, 87, 1, 87, 1, 87, 1, 87, 5, 87, 647, 8, 87, 10,
		87, 12, 87, 650, 9, 87, 1, 87, 1, 87, 1, 88, 1, 88, 1, 88, 1, 88, 1, 88,
		1, 89, 1, 89, 1, 89, 1, 89, 5, 89, 663, 8, 89, 10, 89, 12, 89, 666, 9,
		89, 1, 89, 1, 89, 1, 89, 1, 89, 1, 89, 5, 89, 673, 8, 89, 10, 89, 12, 89,
		676, 9, 89, 1, 89, 1, 89, 1, 89, 5, 89, 681, 8, 89, 10, 89, 12, 89, 684,
		9, 89, 1, 89, 1, 89, 1, 89, 5, 89, 689, 8, 89, 10, 89, 12, 89, 692, 9,
		89, 3, 89, 694, 8, 89, 1, 90, 1, 90, 1, 90, 1, 91, 1, 91, 1, 91, 1, 91,
		5, 91, 703, 8, 91, 10, 91, 12, 91, 706, 9, 91, 1, 91, 3, 91, 709, 8, 91,
		1, 91, 1, 91, 3, 91, 713, 8, 91, 1, 91, 1, 91, 1, 92, 1, 92, 1, 92, 1,
		92, 5, 92, 721, 8, 92, 10, 92, 12, 92, 724, 9, 92, 1, 92, 1, 92, 1, 92,
		1, 92, 1, 92, 1, 93, 1, 93, 1, 93, 1, 93, 1, 94, 1, 94, 1, 722, 0, 95,
		1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47,
		95, 48, 97, 49, 99, 50, 101, 51, 103, 52, 105, 53, 107, 54, 109, 55, 111,
		56, 113, 57, 115, 58, 117, 59, 119, 60, 121, 61, 123, 62, 125, 63, 127,
		64, 129, 65, 131, 66, 133, 67, 135, 68, 137, 69, 139, 70, 141, 71, 143,
		72, 145, 73, 147, 74, 149, 75, 151, 76, 153, 77, 155, 78, 157, 79, 159,
		80, 161, 81, 163, 82, 165, 83, 167, 84, 169, 85, 171, 86, 173, 87, 175,
		88, 177, 89, 179, 90, 181, 91, 183, 92, 185, 93, 187, 94, 189, 95, 1, 0,
		35, 2, 0, 65, 65, 97, 97, 2, 0, 68, 68, 100, 100, 2, 0, 76, 76, 108, 108,
		2, 0, 78, 78, 110, 110, 2, 0, 83, 83, 115, 115, 2, 0, 67, 67, 99, 99, 2,
		0, 66, 66, 98, 98, 2, 0, 69, 69, 101, 101, 2, 0, 84, 84, 116, 116, 2, 0,
		87, 87, 119, 119, 2, 0, 89, 89, 121, 121, 2, 0, 79, 79, 111, 111, 2, 0,
		77, 77, 109, 109, 2, 0, 73, 73, 105, 105, 2, 0, 70, 70, 102, 102, 2, 0,
		82, 82, 114, 114, 2, 0, 85, 85, 117, 117, 2, 0, 80, 80, 112, 112, 2, 0,
		88, 88, 120, 120, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0,
		86, 86, 118, 118, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 1, 0,
		48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 39, 39, 1, 0, 34, 34, 1, 0,
		96, 96, 1, 0, 93, 93, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57, 65,
		90, 95, 95, 97, 122, 2, 0, 36, 36, 64, 64, 2, 0, 10, 10, 13, 13, 3, 0,
		9, 11, 13, 13, 32, 32, 753, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1,
		0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13,
		1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0,
		21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0,
		0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0,
		0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0,
		0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1,
		0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59,
		1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0,
		67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0,
		0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0,
		0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0,
		0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 0, 97, 1,
		0, 0, 0, 0, 99, 1, 0, 0, 0, 0, 101, 1, 0, 0, 0, 0, 103, 1, 0, 0, 0, 0,
		105, 1, 0, 0, 0, 0, 107, 1, 0, 0, 0, 0, 109, 1, 0, 0, 0, 0, 111, 1, 0,
		0, 0, 0, 113, 1, 0, 0, 0, 0, 115, 1, 0, 0, 0, 0, 117, 1, 0, 0, 0, 0, 119,
		1, 0, 0, 0, 0, 121, 1, 0, 0, 0, 0, 123, 1, 0, 0, 0, 0, 125, 1, 0, 0, 0,
		0, 127, 1, 0, 0, 0, 0, 129, 1, 0, 0, 0, 0, 131, 1, 0, 0, 0, 0, 133, 1,
		0, 0, 0, 0, 135, 1, 0, 0, 0, 0, 137, 1, 0, 0, 0, 0, 139, 1, 0, 0, 0, 0,
		141, 1, 0, 0, 0, 0, 143, 1, 0, 0, 0, 0, 145, 1, 0, 0, 0, 0, 147, 1, 0,
		0, 0, 0, 149, 1, 0, 0, 0, 0, 151, 1, 0, 0, 0, 0, 153, 1, 0, 0, 0, 0, 155,
		1, 0, 0, 0, 0, 157, 1, 0, 0, 0, 0, 159, 1, 0, 0, 0, 0, 161, 1, 0, 0, 0,
		0, 163, 1, 0, 0, 0, 0, 165, 1, 0, 0, 0, 0, 167, 1, 0, 0, 0, 0, 169, 1,
		0, 0, 0, 0, 171, 1, 0, 0, 0, 0, 173, 1, 0, 0, 0, 0, 175, 1, 0, 0, 0, 0,
		177, 1, 0, 0, 0, 0, 179, 1, 0, 0, 0, 0, 181, 1, 0, 0, 0, 0, 183, 1, 0,
		0, 0, 0, 185, 1, 0, 0, 0, 0, 187, 1, 0, 0, 0, 0, 189, 1, 0, 0, 0, 1, 191,
		1, 0, 0, 0, 3, 193, 1, 0, 0, 0, 5, 195, 1, 0, 0, 0, 7, 197, 1, 0, 0, 0,
		9, 199, 1, 0, 0, 0, 11, 201, 1, 0, 0, 0, 13, 203, 1, 0, 0, 0, 15, 205,
		1, 0, 0, 0, 17, 207, 1, 0, 0, 0, 19, 209, 1, 0, 0, 0, 21, 211, 1, 0, 0,
		0, 23, 213, 1, 0, 0, 0, 25, 215, 1, 0, 0, 0, 27, 218, 1, 0, 0, 0, 29, 220,
		1, 0, 0, 0, 31, 223, 1, 0, 0, 0, 33, 226, 1, 0, 0, 0, 35, 229, 1, 0, 0,
		0, 37, 232, 1, 0, 0, 0, 39, 236, 1, 0, 0, 0, 41, 240, 1, 0, 0, 0, 43, 244,
		1, 0, 0, 0, 45, 248, 1, 0, 0, 0, 47, 251, 1, 0, 0, 0, 49, 259, 1, 0, 0,
		0, 51, 262, 1, 0, 0, 0, 53, 267, 1, 0, 0, 0, 55, 275, 1, 0, 0, 0, 57, 282,
		1, 0, 0, 0, 59, 291, 1, 0, 0, 0, 61, 298, 1, 0, 0, 0, 63, 304, 1, 0, 0,
		0, 65, 312, 1, 0, 0, 0, 67, 319, 1, 0, 0, 0, 69, 324, 1, 0, 0, 0, 71, 333,
		1, 0, 0, 0, 73, 336, 1, 0, 0, 0, 75, 341, 1, 0, 0, 0, 77, 345, 1, 0, 0,
		0, 79, 352, 1, 0, 0, 0, 81, 359, 1, 0, 0, 0, 83, 366, 1, 0, 0, 0, 85, 373,
		1, 0, 0, 0, 87, 379, 1, 0, 0, 0, 89, 384, 1, 0, 0, 0, 91, 389, 1, 0, 0,
		0, 93, 396, 1, 0, 0, 0, 95, 402, 1, 0, 0, 0, 97, 409, 1, 0, 0, 0, 99, 415,
		1, 0, 0, 0, 101, 422, 1, 0, 0, 0, 103, 432, 1, 0, 0, 0, 105, 437, 1, 0,
		0, 0, 107, 440, 1, 0, 0, 0, 109, 447, 1, 0, 0, 0, 111, 450, 1, 0, 0, 0,
		113, 455, 1, 0, 0, 0, 115, 460, 1, 0, 0, 0, 117, 465, 1, 0, 0, 0, 119,
		470, 1, 0, 0, 0, 121, 476, 1, 0, 0, 0, 123, 484, 1, 0, 0, 0, 125, 492,
		1, 0, 0, 0, 127, 496, 1, 0, 0, 0, 129, 502, 1, 0, 0, 0, 131, 509, 1, 0,
		0, 0, 133, 512, 1, 0, 0, 0, 135, 515, 1, 0, 0, 0, 137, 521, 1, 0, 0, 0,
		139, 524, 1, 0, 0, 0, 141, 530, 1, 0, 0, 0, 143, 536, 1, 0, 0, 0, 145,
		544, 1, 0, 0, 0, 147, 554, 1, 0, 0, 0, 149, 560, 1, 0, 0, 0, 151, 567,
		1, 0, 0, 0, 153, 571, 1, 0, 0, 0, 155, 576, 1, 0, 0, 0, 157, 582, 1, 0,
		0, 0, 159, 589, 1, 0, 0, 0, 161, 595, 1, 0, 0, 0, 163, 602, 1, 0, 0, 0,
		165, 607, 1, 0, 0, 0, 167, 613, 1, 0, 0, 0, 169, 627, 1, 0, 0, 0, 171,
		630, 1, 0, 0, 0, 173, 634, 1, 0, 0, 0, 175, 642, 1, 0, 0, 0, 177, 653,
		1, 0, 0, 0, 179, 693, 1, 0, 0, 0, 181, 695, 1, 0, 0, 0, 183, 698, 1, 0,
		0, 0, 185, 716, 1, 0, 0, 0, 187, 730, 1, 0, 0, 0, 189, 734, 1, 0, 0, 0,
		191, 192, 5, 59, 0, 0, 192, 2, 1, 0, 0, 0, 193, 194, 5, 46, 0, 0, 194,
		4, 1, 0, 0, 0, 195, 196, 5, 40, 0, 0, 196, 6, 1, 0, 0, 0, 197, 198, 5,
		41, 0, 0, 198, 8, 1, 0, 0, 0, 199, 200, 5, 44, 0, 0, 200, 10, 1, 0, 0,
		0, 201, 202, 5, 61, 0, 0, 202, 12, 1, 0, 0, 0, 203, 204, 5, 42, 0, 0, 204,
		14, 1, 0, 0, 0, 205, 206, 5, 43, 0, 0, 206, 16, 1, 0, 0, 0, 207, 208, 5,
		45, 0, 0, 208, 18, 1, 0, 0, 0, 209, 210, 5, 47, 0, 0, 210, 20, 1, 0, 0,
		0, 211, 212, 5, 37, 0, 0, 212, 22, 1, 0, 0, 0, 213, 214, 5, 60, 0, 0, 214,
		24, 1, 0, 0, 0, 215, 216, 5, 60, 0, 0, 216, 217, 5, 61, 0, 0, 217, 26,
		1, 0, 0, 0, 218, 219, 5, 62, 0, 0, 219, 28, 1, 0, 0, 0, 220, 221, 5, 62,
		0, 0, 221, 222, 5, 61, 0, 0, 222, 30, 1, 0, 0, 0, 223, 224, 5, 33, 0, 0,
		224, 225, 5, 61, 0, 0, 225, 32, 1, 0, 0, 0, 226, 227, 5, 60, 0, 0, 227,
		228, 5, 62, 0, 0, 228, 34, 1, 0, 0, 0, 229, 230, 5, 58, 0, 0, 230, 231,
		5, 58, 0, 0, 231, 36, 1, 0, 0, 0, 232, 233, 7, 0, 0, 0, 233, 234, 7, 1,
		0, 0, 234, 235, 7, 1, 0, 0, 235, 38, 1, 0, 0, 0, 236, 237, 7, 0, 0, 0,
		237, 238, 7, 2, 0, 0, 238, 239, 7, 2, 0, 0, 239, 40, 1, 0, 0, 0, 240, 241,
		7, 0, 0, 0, 241, 242, 7, 3, 0, 0, 242, 243, 7, 1, 0, 0, 243, 42, 1, 0,
		0, 0, 244, 245, 7, 0, 0, 0, 245, 246, 7, 4, 0, 0, 246, 247, 7, 5, 0, 0,
		247, 44, 1, 0, 0, 0, 248, 249, 7, 0, 0, 0, 249, 250, 7, 4, 0, 0, 250, 46,
		1, 0, 0, 0, 251, 252, 7, 6, 0, 0, 252, 253, 7, 7, 0, 0, 253, 254, 7, 8,
		0, 0, 254, 255, 7, 9, 0, 0, 255, 256, 7, 7, 0, 0, 256, 257, 7, 7, 0, 0,
		257, 258, 7, 3, 0, 0, 258, 48, 1, 0, 0, 0, 259, 260, 7, 6, 0, 0, 260, 261,
		7, 10, 0, 0, 261, 50, 1, 0, 0, 0, 262, 263, 7, 5, 0, 0, 263, 264, 7, 0,
		0, 0, 264, 265, 7, 4, 0, 0, 265, 266, 7, 7, 0, 0, 266, 52, 1, 0, 0, 0,
		267, 268, 7, 5, 0, 0, 268, 269, 7, 11, 0, 0, 269, 270, 7, 2, 0, 0, 270,
		271, 7, 2, 0, 0, 271, 272, 7, 0, 0, 0, 272, 273, 7, 8, 0, 0, 273, 274,
		7, 7, 0, 0, 274, 54, 1, 0, 0, 0, 275, 276, 7, 5, 0, 0, 276, 277, 7, 11,
		0, 0, 277, 278, 7, 12, 0, 0, 278, 279, 7, 12, 0, 0, 279, 280, 7, 13, 0,
		0, 280, 281, 7, 8, 0, 0, 281, 56, 1, 0, 0, 0, 282, 283, 7, 5, 0, 0, 283,
		284, 7, 11, 0, 0, 284, 285, 7, 3, 0, 0, 285, 286, 7, 14, 0, 0, 286, 287,
		7, 2, 0, 0, 287, 288, 7, 13, 0, 0, 288, 289, 7, 5, 0, 0, 289, 290, 7, 8,
		0, 0, 290, 58, 1, 0, 0, 0, 291, 292, 7, 5, 0, 0, 292, 293, 7, 15, 0, 0,
		293, 294, 7, 7, 0, 0, 294, 295, 7, 0, 0, 0, 295, 296, 7, 8, 0, 0, 296,
		297, 7, 7, 0, 0, 297, 60, 1, 0, 0, 0, 298, 299, 7, 5, 0, 0, 299, 300, 7,
		15, 0, 0, 300, 301, 7, 11, 0, 0, 301, 302, 7, 4, 0, 0, 302, 303, 7, 4,
		0, 0, 303, 62, 1, 0, 0, 0, 304, 305, 7, 1, 0, 0, 305, 306, 7, 7, 0, 0,
		306, 307, 7, 14, 0, 0, 307, 308, 7, 0, 0, 0, 308, 309, 7, 16, 0, 0, 309,
		310, 7, 2, 0, 0, 310, 311, 7, 8, 0, 0, 311, 64, 1, 0, 0, 0, 312, 313, 7,
		1, 0, 0, 313, 314, 7, 7, 0, 0, 314, 315, 7, 2, 0, 0, 315, 316, 7, 7, 0,
		0, 316, 317, 7, 8, 0, 0, 317, 318, 7, 7, 0, 0, 318, 66, 1, 0, 0, 0, 319,
		320, 7, 1, 0, 0, 320, 321, 7, 7, 0, 0, 321, 322, 7, 4, 0, 0, 322, 323,
		7, 5, 0, 0, 323, 68, 1, 0, 0, 0, 324, 325, 7, 1, 0, 0, 325, 326, 7, 13,
		0, 0, 326, 327, 7, 4, 0, 0, 327, 328, 7, 8, 0, 0, 328, 329, 7, 13, 0, 0,
		329, 330, 7, 3, 0, 0, 330, 331, 7, 5, 0, 0, 331, 332, 7, 8, 0, 0, 332,
		70, 1, 0, 0, 0, 333, 334, 7, 1, 0, 0, 334, 335, 7, 11, 0, 0, 335, 72, 1,
		0, 0, 0, 336, 337, 7, 7, 0, 0, 337, 338, 7, 2, 0, 0, 338, 339, 7, 4, 0,
		0, 339, 340, 7, 7, 0, 0, 340, 74, 1, 0, 0, 0, 341, 342, 7, 7, 0, 0, 342,
		343, 7, 3, 0, 0, 343, 344, 7, 1, 0, 0, 344, 76, 1, 0, 0, 0, 345, 346, 7,
		7, 0, 0, 346, 347, 7, 4, 0, 0, 347, 348, 7, 5, 0, 0, 348, 349, 7, 0, 0,
		0, 349, 350, 7, 17, 0, 0, 350, 351, 7, 7, 0, 0, 351, 78, 1, 0, 0, 0, 352,
		353, 7, 7, 0, 0, 353, 354, 7, 18, 0, 0, 354, 355, 7, 5, 0, 0, 355, 356,
		7, 7, 0, 0, 356, 357, 7, 17, 0, 0, 357, 358, 7, 8, 0, 0, 358, 80, 1, 0,
		0, 0, 359, 360, 7, 7, 0, 0, 360, 361, 7, 18, 0, 0, 361, 362, 7, 13, 0,
		0, 362, 363, 7, 4, 0, 0, 363, 364, 7, 8, 0, 0, 364, 365, 7, 4, 0, 0, 365,
		82, 1, 0, 0, 0, 366, 367, 7, 14, 0, 0, 367, 368, 7, 13, 0, 0, 368, 369,
		7, 2, 0, 0, 369, 370, 7, 8, 0, 0, 370, 371, 7, 7, 0, 0, 371, 372, 7, 15,
		0, 0, 372, 84, 1, 0, 0, 0, 373, 374, 7, 14, 0, 0, 374, 375, 7, 13, 0, 0,
		375, 376, 7, 15, 0, 0, 376, 377, 7, 4, 0, 0, 377, 378, 7, 8, 0, 0, 378,
		86, 1, 0, 0, 0, 379, 380, 7, 14, 0, 0, 380, 381, 7, 15, 0, 0, 381, 382,
		7, 11, 0, 0, 382, 383, 7, 12, 0, 0, 383, 88, 1, 0, 0, 0, 384, 385, 7, 14,
		0, 0, 385, 386, 7, 16, 0, 0, 386, 387, 7, 2, 0, 0, 387, 388, 7, 2, 0, 0,
		388, 90, 1, 0, 0, 0, 389, 390, 7, 19, 0, 0, 390, 391, 7, 15, 0, 0, 391,
		392, 7, 11, 0, 0, 392, 393, 7, 16, 0, 0, 393, 394, 7, 17, 0, 0, 394, 395,
		7, 4, 0, 0, 395, 92, 1, 0, 0, 0, 396, 397, 7, 19, 0, 0, 397, 398, 7, 15,
		0, 0, 398, 399, 7, 11, 0, 0, 399, 400, 7, 16, 0, 0, 400, 401, 7, 17, 0,
		0, 401, 94, 1, 0, 0, 0, 402, 403, 7, 20, 0, 0, 403, 404, 7, 0, 0, 0, 404,
		405, 7, 21, 0, 0, 405, 406, 7, 13, 0, 0, 406, 407, 7, 3, 0, 0, 407, 408,
		7, 19, 0, 0, 408, 96, 1, 0, 0, 0, 409, 410, 7, 13, 0, 0, 410, 411, 7, 3,
		0, 0, 411, 412, 7, 3, 0, 0, 412, 413, 7, 7, 0, 0, 413, 414, 7, 15, 0, 0,
		414, 98, 1, 0, 0, 0, 415, 416, 7, 13, 0, 0, 416, 417, 7, 3, 0, 0, 417,
		418, 7, 4, 0, 0, 418, 419, 7, 7, 0, 0, 419, 420, 7, 15, 0, 0, 420, 421,
		7, 8, 0, 0, 421, 100, 1, 0, 0, 0, 422, 423, 7, 13, 0, 0, 423, 424, 7, 3,
		0, 0, 424, 425, 7, 8, 0, 0, 425, 426, 7, 7, 0, 0, 426, 427, 7, 15, 0, 0,
		427, 428, 7, 4, 0, 0, 428, 429, 7, 7, 0, 0, 429, 430, 7, 5, 0, 0, 430,
		431, 7, 8, 0, 0, 431, 102, 1, 0, 0, 0, 432, 433, 7, 13, 0, 0, 433, 434,
		7, 3, 0, 0, 434, 435, 7, 8, 0, 0, 435, 436, 7, 11, 0, 0, 436, 104, 1, 0,
		0, 0, 437, 438, 7, 13, 0, 0, 438, 439, 7, 3, 0, 0, 439, 106, 1, 0, 0, 0,
		440, 441, 7, 13, 0, 0, 441, 442, 7, 4, 0, 0, 442, 443, 7, 3, 0, 0, 443,
		444, 7, 16, 0, 0, 444, 445, 7, 2, 0, 0, 445, 446, 7, 2, 0, 0, 446, 108,
		1, 0, 0, 0, 447, 448, 7, 13, 0, 0, 448, 449, 7, 4, 0, 0, 449, 110, 1, 0,
		0, 0, 450, 451, 7, 22, 0, 0, 451, 452, 7, 11, 0, 0, 452, 453, 7, 13, 0,
		0, 453, 454, 7, 3, 0, 0, 454, 112, 1, 0, 0, 0, 455, 456, 7, 2, 0, 0, 456,
		457, 7, 0, 0, 0, 457, 458, 7, 4, 0, 0, 458, 459, 7, 8, 0, 0, 459, 114,
		1, 0, 0, 0, 460, 461, 7, 2, 0, 0, 461, 462, 7, 7, 0, 0, 462, 463, 7, 14,
		0, 0, 463, 464, 7, 8, 0, 0, 464, 116, 1, 0, 0, 0, 465, 466, 7, 2, 0, 0,
		466, 467, 7, 13, 0, 0, 467, 468, 7, 23, 0, 0, 468, 469, 7, 7, 0, 0, 469,
		118, 1, 0, 0, 0, 470, 471, 7, 2, 0, 0, 471, 472, 7, 13, 0, 0, 472, 473,
		7, 12, 0, 0, 473, 474, 7, 13, 0, 0, 474, 475, 7, 8, 0, 0, 475, 120, 1,
		0, 0, 0, 476, 477, 7, 3, 0, 0, 477, 478, 7, 11, 0, 0, 478, 479, 7, 8, 0,
		0, 479, 480, 7, 20, 0, 0, 480, 481, 7, 13, 0, 0, 481, 482, 7, 3, 0, 0,
		482, 483, 7, 19, 0, 0, 483, 122, 1, 0, 0, 0, 484, 485, 7, 3, 0, 0, 485,
		486, 7, 11, 0, 0, 486, 487, 7, 8, 0, 0, 487, 488, 7, 3, 0, 0, 488, 489,
		7, 16, 0, 0, 489, 490, 7, 2, 0, 0, 490, 491, 7, 2, 0, 0, 491, 124, 1, 0,
		0, 0, 492, 493, 7, 3, 0, 0, 493, 494, 7, 11, 0, 0, 494, 495, 7, 8, 0, 0,
		495, 126, 1, 0, 0, 0, 496, 497, 7, 3, 0, 0, 497, 498, 7, 16, 0, 0, 498,
		499, 7, 2, 0, 0, 499, 500, 7, 2, 0, 0, 500, 501, 7, 4, 0, 0, 501, 128,
		1, 0, 0, 0, 502, 503, 7, 11, 0, 0, 503, 504, 7, 14, 0, 0, 504, 505, 7,
		14, 0, 0, 505, 506, 7, 4, 0, 0, 506, 507, 7, 7, 0, 0, 507, 508, 7, 8, 0,
		0, 508, 130, 1, 0, 0, 0, 509, 510, 7, 11, 0, 0, 510, 511, 7, 14, 0, 0,
		511, 132, 1, 0, 0, 0, 512, 513, 7, 11, 0, 0, 513, 514, 7, 3, 0, 0, 514,
		134, 1, 0, 0, 0, 515, 516, 7, 11, 0, 0, 516, 517, 7, 15, 0, 0, 517, 518,
		7, 1, 0, 0, 518, 519, 7, 7, 0, 0, 519, 520, 7, 15, 0, 0, 520, 136, 1, 0,
		0, 0, 521, 522, 7, 11, 0, 0, 522, 523, 7, 15, 0, 0, 523, 138, 1, 0, 0,
		0, 524, 525, 7, 11, 0, 0, 525, 526, 7, 16, 0, 0, 526, 527, 7, 8, 0, 0,
		527, 528, 7, 7, 0, 0, 528, 529, 7, 15, 0, 0, 529, 140, 1, 0, 0, 0, 530,
		531, 7, 15, 0, 0, 531, 532, 7, 0, 0, 0, 532, 533, 7, 13, 0, 0, 533, 534,
		7, 4, 0, 0, 534, 535, 7, 7, 0, 0, 535, 142, 1, 0, 0, 0, 536, 537, 7, 15,
		0, 0, 537, 538, 7, 7, 0, 0, 538, 539, 7, 17, 0, 0, 539, 540, 7, 2, 0, 0,
		540, 541, 7, 0, 0, 0, 541, 542, 7, 5, 0, 0, 542, 543, 7, 7, 0, 0, 543,
		144, 1, 0, 0, 0, 544, 545, 7, 15, 0, 0, 545, 546, 7, 7, 0, 0, 546, 547,
		7, 8, 0, 0, 547, 548, 7, 16, 0, 0, 548, 549, 7, 15, 0, 0, 549, 550, 7,
		3, 0, 0, 550, 551, 7, 13, 0, 0, 551, 552, 7, 3, 0, 0, 552, 553, 7, 19,
		0, 0, 553, 146, 1, 0, 0, 0, 554, 555, 7, 15, 0, 0, 555, 556, 7, 13, 0,
		0, 556, 557, 7, 19, 0, 0, 557, 558, 7, 20, 0, 0, 558, 559, 7, 8, 0, 0,
		559, 148, 1, 0, 0, 0, 560, 561, 7, 4, 0, 0, 561, 562, 7, 7, 0, 0, 562,
		563, 7, 2, 0, 0, 563, 564, 7, 7, 0, 0, 564, 565, 7, 5, 0, 0, 565, 566,
		7, 8, 0, 0, 566, 150, 1, 0, 0, 0, 567, 568, 7, 4, 0, 0, 568, 569, 7, 7,
		0, 0, 569, 570, 7, 8, 0, 0, 570, 152, 1, 0, 0, 0, 571, 572, 7, 8, 0, 0,
		572, 573, 7, 20, 0, 0, 573, 574, 7, 7, 0, 0, 574, 575, 7, 3, 0, 0, 575,
		154, 1, 0, 0, 0, 576, 577, 7, 16, 0, 0, 577, 578, 7, 3, 0, 0, 578, 579,
		7, 13, 0, 0, 579, 580, 7, 11, 0, 0, 580, 581, 7, 3, 0, 0, 581, 156, 1,
		0, 0, 0, 582, 583, 7, 16, 0, 0, 583, 584, 7, 17, 0, 0, 584, 585, 7, 1,
		0, 0, 585, 586, 7, 0, 0, 0, 586, 587, 7, 8, 0, 0, 587, 588, 7, 7, 0, 0,
		588, 158, 1, 0, 0, 0, 589, 590, 7, 16, 0, 0, 590, 591, 7, 4, 0, 0, 591,
		592, 7, 13, 0, 0, 592, 593, 7, 3, 0, 0, 593, 594, 7, 19, 0, 0, 594, 160,
		1, 0, 0, 0, 595, 596, 7, 21, 0, 0, 596, 597, 7, 0, 0, 0, 597, 598, 7, 2,
		0, 0, 598, 599, 7, 16, 0, 0, 599, 600, 7, 7, 0, 0, 600, 601, 7, 4, 0, 0,
		601, 162, 1, 0, 0, 0, 602, 603, 7, 9, 0, 0, 603, 604, 7, 20, 0, 0, 604,
		605, 7, 7, 0, 0, 605, 606, 7, 3, 0, 0, 606, 164, 1, 0, 0, 0, 607, 608,
		7, 9, 0, 0, 608, 609, 7, 20, 0, 0, 609, 610, 7, 7, 0, 0, 610, 611, 7, 15,
		0, 0, 611, 612, 7, 7, 0, 0, 612, 166, 1, 0, 0, 0, 613, 614, 7, 9, 0, 0,
		614, 615, 7, 13, 0, 0, 615, 616, 7, 8, 0, 0, 616, 617, 7, 20, 0, 0, 617,
		168, 1, 0, 0, 0, 618, 619, 7, 8, 0, 0, 619, 620, 7, 15, 0, 0, 620, 621,
		7, 16, 0, 0, 621, 628, 7, 7, 0, 0, 622, 623, 7, 14, 0, 0, 623, 624, 7,
		0, 0, 0, 624, 625, 7, 2, 0, 0, 625, 626, 7, 4, 0, 0, 626, 628, 7, 7, 0,
		0, 627, 618, 1, 0, 0, 0, 627, 622, 1, 0, 0, 0, 628, 170, 1, 0, 0, 0, 629,
		631, 7, 24, 0, 0, 630, 629, 1, 0, 0, 0, 631, 632, 1, 0, 0, 0, 632, 630,
		1, 0, 0, 0, 632, 633, 1, 0, 0, 0, 633, 172, 1, 0, 0, 0, 634, 635, 5, 48,
		0, 0, 635, 636, 7, 18, 0, 0, 636, 638, 1, 0, 0, 0, 637, 639, 7, 25, 0,
		0, 638, 637, 1, 0, 0, 0, 639, 640, 1, 0, 0, 0, 640, 638, 1, 0, 0, 0, 640,
		641, 1, 0, 0, 0, 641, 174, 1, 0, 0, 0, 642, 648, 5, 39, 0, 0, 643, 647,
		8, 26, 0, 0, 644, 645, 5, 39, 0, 0, 645, 647, 5, 39, 0, 0, 646, 643, 1,
		0, 0, 0, 646, 644, 1, 0, 0, 0, 647, 650, 1, 0, 0, 0, 648, 646, 1, 0, 0,
		0, 648, 649, 1, 0, 0, 0, 649, 651, 1, 0, 0, 0, 650, 648, 1, 0, 0, 0, 651,
		652, 5, 39, 0, 0, 652, 176, 1, 0, 0, 0, 653, 654, 7, 3, 0, 0, 654, 655,
		7, 16, 0, 0, 655, 656, 7, 2, 0, 0, 656, 657, 7, 2, 0, 0, 657, 178, 1, 0,
		0, 0, 658, 664, 5, 34, 0, 0, 659, 663, 8, 27, 0, 0, 660, 661, 5, 34, 0,
		0, 661, 663, 5, 34, 0, 0, 662, 659, 1, 0, 0, 0, 662, 660, 1, 0, 0, 0, 663,
		666, 1, 0, 0, 0, 664, 662, 1, 0, 0, 0, 664, 665, 1, 0, 0, 0, 665, 667,
		1, 0, 0, 0, 666, 664, 1, 0, 0, 0, 667, 694, 5, 34, 0, 0, 668, 674, 5, 96,
		0, 0, 669, 673, 8, 28, 0, 0, 670, 671, 5, 96, 0, 0, 671, 673, 5, 96, 0,
		0, 672, 669, 1, 0, 0, 0, 672, 670, 1, 0, 0, 0, 673, 676, 1, 0, 0, 0, 674,
		672, 1, 0, 0, 0, 674, 675, 1, 0, 0, 0, 675, 677, 1, 0, 0, 0, 676, 674,
		1, 0, 0, 0, 677, 694, 5, 96, 0, 0, 678, 682, 5, 91, 0, 0, 679, 681, 8,
		29, 0, 0, 680, 679, 1, 0, 0, 0, 681, 684, 1, 0, 0, 0, 682, 680, 1, 0, 0,
		0, 682, 683, 1, 0, 0, 0, 683, 685, 1, 0, 0, 0, 684, 682, 1, 0, 0, 0, 685,
		694, 5, 93, 0, 0, 686, 690, 7, 30, 0, 0, 687, 689, 7, 31, 0, 0, 688, 687,
		1, 0, 0, 0, 689, 692, 1, 0, 0, 0, 690, 688, 1, 0, 0, 0, 690, 691, 1, 0,
		0, 0, 691, 694, 1, 0, 0, 0, 692, 690, 1, 0, 0, 0, 693, 658, 1, 0, 0, 0,
		693, 668, 1, 0, 0, 0, 693, 678, 1, 0, 0, 0, 693, 686, 1, 0, 0, 0, 694,
		180, 1, 0, 0, 0, 695, 696, 7, 32, 0, 0, 696, 697, 3, 179, 89, 0, 697, 182,
		1, 0, 0, 0, 698, 699, 5, 45, 0, 0, 699, 700, 5, 45, 0, 0, 700, 704, 1,
		0, 0, 0, 701, 703, 8, 33, 0, 0, 702, 701, 1, 0, 0, 0, 703, 706, 1, 0, 0,
		0, 704, 702, 1, 0, 0, 0, 704, 705, 1, 0, 0, 0, 705, 712, 1, 0, 0, 0, 706,
		704, 1, 0, 0, 0, 707, 709, 5, 13, 0, 0, 708, 707, 1, 0, 0, 0, 708, 709,
		1, 0, 0, 0, 709, 710, 1, 0, 0, 0, 710, 713, 5, 10, 0, 0, 711, 713, 5, 0,
		0, 1, 712, 708, 1, 0, 0, 0, 712, 711, 1, 0, 0, 0, 713, 714, 1, 0, 0, 0,
		714, 715, 6, 91, 0, 0, 715, 184, 1, 0, 0, 0, 716, 717, 5, 47, 0, 0, 717,
		718, 5, 42, 0, 0, 718, 722, 1, 0, 0, 0, 719, 721, 9, 0, 0, 0, 720, 719,
		1, 0, 0, 0, 721, 724, 1, 0, 0, 0, 722, 723, 1, 0, 0, 0, 722, 720, 1, 0,
		0, 0, 723, 725, 1, 0, 0, 0, 724, 722, 1, 0, 0, 0, 725, 726, 5, 42, 0, 0,
		726, 727, 5, 47, 0, 0, 727, 728, 1, 0, 0, 0, 728, 729, 6, 92, 0, 0, 729,
		186, 1, 0, 0, 0, 730, 731, 7, 34, 0, 0, 731, 732, 1, 0, 0, 0, 732, 733,
		6, 93, 0, 0, 733, 188, 1, 0, 0, 0, 734, 735, 9, 0, 0, 0, 735, 190, 1, 0,
		0, 0, 17, 0, 627, 632, 640, 646, 648, 662, 664, 672, 674, 682, 690, 693,
		704, 708, 712, 722, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// SQLLexerInit initializes any static state used to implement SQLLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewSQLLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func SQLLexerInit() {
	staticData := &SQLLexerLexerStaticData
	staticData.once.Do(sqllexerLexerInit)
}

// NewSQLLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewSQLLexer(input antlr.CharStream) *SQLLexer {
	SQLLexerInit()
	l := new(SQLLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &SQLLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "SQLLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// SQLLexer tokens.
const (
	SQLLexerSCOL                = 1
	SQLLexerDOT                 = 2
	SQLLexerOPEN_PAR            = 3
	SQLLexerCLOSE_PAR           = 4
	SQLLexerCOMMA               = 5
	SQLLexerASSIGN              = 6
	SQLLexerSTAR                = 7
	SQLLexerPLUS                = 8
	SQLLexerMINUS               = 9
	SQLLexerDIV                 = 10
	SQLLexerMOD                 = 11
	SQLLexerLT                  = 12
	SQLLexerLT_EQ               = 13
	SQLLexerGT                  = 14
	SQLLexerGT_EQ               = 15
	SQLLexerNOT_EQ1             = 16
	SQLLexerNOT_EQ2             = 17
	SQLLexerTYPE_CAST           = 18
	SQLLexerADD_                = 19
	SQLLexerALL_                = 20
	SQLLexerAND_                = 21
	SQLLexerASC_                = 22
	SQLLexerAS_                 = 23
	SQLLexerBETWEEN_            = 24
	SQLLexerBY_                 = 25
	SQLLexerCASE_               = 26
	SQLLexerCOLLATE_            = 27
	SQLLexerCOMMIT_             = 28
	SQLLexerCONFLICT_           = 29
	SQLLexerCREATE_             = 30
	SQLLexerCROSS_              = 31
	SQLLexerDEFAULT_            = 32
	SQLLexerDELETE_             = 33
	SQLLexerDESC_               = 34
	SQLLexerDISTINCT_           = 35
	SQLLexerDO_                 = 36
	SQLLexerELSE_               = 37
	SQLLexerEND_                = 38
	SQLLexerESCAPE_             = 39
	SQLLexerEXCEPT_             = 40
	SQLLexerEXISTS_             = 41
	SQLLexerFILTER_             = 42
	SQLLexerFIRST_              = 43
	SQLLexerFROM_               = 44
	SQLLexerFULL_               = 45
	SQLLexerGROUPS_             = 46
	SQLLexerGROUP_              = 47
	SQLLexerHAVING_             = 48
	SQLLexerINNER_              = 49
	SQLLexerINSERT_             = 50
	SQLLexerINTERSECT_          = 51
	SQLLexerINTO_               = 52
	SQLLexerIN_                 = 53
	SQLLexerISNULL_             = 54
	SQLLexerIS_                 = 55
	SQLLexerJOIN_               = 56
	SQLLexerLAST_               = 57
	SQLLexerLEFT_               = 58
	SQLLexerLIKE_               = 59
	SQLLexerLIMIT_              = 60
	SQLLexerNOTHING_            = 61
	SQLLexerNOTNULL_            = 62
	SQLLexerNOT_                = 63
	SQLLexerNULLS_              = 64
	SQLLexerOFFSET_             = 65
	SQLLexerOF_                 = 66
	SQLLexerON_                 = 67
	SQLLexerORDER_              = 68
	SQLLexerOR_                 = 69
	SQLLexerOUTER_              = 70
	SQLLexerRAISE_              = 71
	SQLLexerREPLACE_            = 72
	SQLLexerRETURNING_          = 73
	SQLLexerRIGHT_              = 74
	SQLLexerSELECT_             = 75
	SQLLexerSET_                = 76
	SQLLexerTHEN_               = 77
	SQLLexerUNION_              = 78
	SQLLexerUPDATE_             = 79
	SQLLexerUSING_              = 80
	SQLLexerVALUES_             = 81
	SQLLexerWHEN_               = 82
	SQLLexerWHERE_              = 83
	SQLLexerWITH_               = 84
	SQLLexerBOOLEAN_LITERAL     = 85
	SQLLexerNUMERIC_LITERAL     = 86
	SQLLexerBLOB_LITERAL        = 87
	SQLLexerTEXT_LITERAL        = 88
	SQLLexerNULL_LITERAL        = 89
	SQLLexerIDENTIFIER          = 90
	SQLLexerBIND_PARAMETER      = 91
	SQLLexerSINGLE_LINE_COMMENT = 92
	SQLLexerMULTILINE_COMMENT   = 93
	SQLLexerSPACES              = 94
	SQLLexerUNEXPECTED_CHAR     = 95
)
