# Default values for hasura.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hasura/graphql-engine
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2.16.0"

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service config should be created
  create: false
  # Annotations to add to the service config
  annotations: {}
  # The name of the service config to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  imageRegistry: "https://hub.docker.com/"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    hasura: 8080
  nodePorts: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

containerPorts:
  hasura: 8080

hasuraApp:
  database: postgres
  enableConsole: true
  devMode: true
  logTypes: startup, http-log, webhook-log, websocket-log, query-log
  probes:
    liveInitialDelaySeconds: 4
    readyInitialDelaySeconds: 3
    timeoutSeconds: 1
    periodSeconds: 15

# overwrite postgresql setting
postgresql:
  enabled: true # for dependency
  primary:
    service:
      ports:
        postgresql: 5432
    persistence:
      # by default disable persistent volume
      enabled: false
    initdb:
      scripts:
        initdb.sh: |
          #!/bin/bash
          echo "put init script here"

# overwrite postgresql global setting
global:
  kwild:
    database: "kwil"
  postgresql:
    auth:
      postgresPassword: "postgres"
      username: "postgres"
      password: "postgres"
  postgres:
    enabled: false # for external database
    host: "host"
    port: 5432
    database: "db"
    username: "postgres"
    password: "postgres"