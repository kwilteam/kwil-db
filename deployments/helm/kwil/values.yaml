# Default values for kwil.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: kwil-gateway
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service config should be created
  create: false
  # Annotations to add to the service config
  annotations: {}
  # The name of the service config to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  ports:
    kwil: 8082
  nodePorts: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configMapMnt:
  keys.json: "/app/keys.json"

containerPorts:
  kwil: 8082

kwilApp:
  server:
    listenAddr: ":8082"
    cors: "*"
    healthcheckKey: "this should be rotated every deployment"
    keyFile: "/app/keys.json"
  log:
    level: "info"
    outputPaths:
      - "stdout"
  graphql:
    endpoint: ""
  probes:
    liveInitialDelaySeconds: 6
    readyInitialDelaySeconds: 5
    timeoutSeconds: 1
    periodSeconds: 15

# overwrite postgresql global setting
global:
  kwild:
    database: "kwil"
  postgresql:
    auth:
      postgresPassword: "postgres"
      username: "postgres"
      password: "postgres"
  postgres:
    enabled: false # for external database
    host: "remote-host"
    port: 5432
    database: "remote-db"
    username: "remote-postgres"
    password: "remote-postgres"


