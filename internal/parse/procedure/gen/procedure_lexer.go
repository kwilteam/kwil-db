// Code generated from ProcedureLexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package gen

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type ProcedureLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var ProcedureLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func procedurelexerLexerInit() {
	staticData := &ProcedureLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "';'", "'('", "')'", "'{'", "'}'", "','", "'::'", "':'", "'$'",
		"'@'", "':='", "'.'", "'['", "']'", "'''", "'_'", "'+'", "'-'", "'*'",
		"'/'", "'%'", "'<'", "'<='", "'>'", "'>='", "'!='", "'=='", "", "'for'",
		"'in'", "'if'", "'elseif'", "'else'", "'to'", "'return'", "'break'",
		"'next'", "", "", "", "", "'null'",
	}
	staticData.SymbolicNames = []string{
		"", "SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "TYPE_CAST",
		"COLON", "DOLLAR", "AT", "ASSIGN", "PERIOD", "LBRACKET", "RBRACKET",
		"SINGLE_QUOTE", "UNDERSCORE", "PLUS", "MINUS", "MUL", "DIV", "MOD",
		"LT", "LT_EQ", "GT", "GT_EQ", "NEQ", "EQ", "ANY_SQL", "FOR", "IN", "IF",
		"ELSEIF", "ELSE", "TO", "RETURN", "BREAK", "NEXT", "BOOLEAN_LITERAL",
		"INT_LITERAL", "BLOB_LITERAL", "TEXT_LITERAL", "NULL_LITERAL", "IDENTIFIER",
		"VARIABLE", "WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT",
	}
	staticData.RuleNames = []string{
		"SEMICOLON", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "COMMA", "TYPE_CAST",
		"COLON", "DOLLAR", "AT", "ASSIGN", "PERIOD", "LBRACKET", "RBRACKET",
		"SINGLE_QUOTE", "UNDERSCORE", "PLUS", "MINUS", "MUL", "DIV", "MOD",
		"LT", "LT_EQ", "GT", "GT_EQ", "NEQ", "EQ", "ANY_SQL", "FOR", "IN", "IF",
		"ELSEIF", "ELSE", "TO", "RETURN", "BREAK", "NEXT", "BOOLEAN_LITERAL",
		"INT_LITERAL", "BLOB_LITERAL", "TEXT_LITERAL", "NULL_LITERAL", "IDENTIFIER",
		"VARIABLE", "WS", "TERMINATOR", "BLOCK_COMMENT", "LINE_COMMENT", "WSNL",
		"SELECT_", "INSERT_", "UPDATE_", "DELETE_", "WITH_",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 48, 352, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 27, 1, 27, 1, 27, 3, 27, 175, 8, 27, 1, 27, 1, 27, 4, 27, 179, 8, 27,
		11, 27, 12, 27, 180, 1, 28, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1,
		30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 31, 1, 32,
		1, 32, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36,
		1, 36, 1, 36, 1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1, 37, 1,
		37, 1, 37, 1, 37, 3, 37, 235, 8, 37, 1, 38, 4, 38, 238, 8, 38, 11, 38,
		12, 38, 239, 1, 39, 1, 39, 1, 39, 1, 39, 4, 39, 246, 8, 39, 11, 39, 12,
		39, 247, 1, 40, 1, 40, 1, 40, 1, 40, 5, 40, 254, 8, 40, 10, 40, 12, 40,
		257, 9, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 42, 1,
		42, 5, 42, 268, 8, 42, 10, 42, 12, 42, 271, 9, 42, 1, 43, 1, 43, 3, 43,
		275, 8, 43, 1, 43, 1, 43, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 4, 45, 284,
		8, 45, 11, 45, 12, 45, 285, 1, 45, 1, 45, 1, 46, 1, 46, 1, 46, 1, 46, 5,
		46, 294, 8, 46, 10, 46, 12, 46, 297, 9, 46, 1, 46, 1, 46, 1, 46, 1, 46,
		1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 5, 47, 308, 8, 47, 10, 47, 12, 47, 311,
		9, 47, 1, 47, 1, 47, 1, 48, 4, 48, 316, 8, 48, 11, 48, 12, 48, 317, 1,
		49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1, 50, 1, 50,
		1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51, 1,
		52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1, 53,
		1, 53, 1, 295, 0, 54, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8,
		17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17,
		35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26,
		53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35,
		71, 36, 73, 37, 75, 38, 77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44,
		89, 45, 91, 46, 93, 47, 95, 48, 97, 0, 99, 0, 101, 0, 103, 0, 105, 0, 107,
		0, 1, 0, 27, 2, 0, 59, 59, 123, 123, 2, 0, 70, 70, 102, 102, 2, 0, 79,
		79, 111, 111, 2, 0, 82, 82, 114, 114, 2, 0, 73, 73, 105, 105, 2, 0, 78,
		78, 110, 110, 2, 0, 69, 69, 101, 101, 2, 0, 76, 76, 108, 108, 2, 0, 83,
		83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117, 117, 2, 0, 66,
		66, 98, 98, 2, 0, 65, 65, 97, 97, 2, 0, 75, 75, 107, 107, 2, 0, 88, 88,
		120, 120, 1, 0, 48, 57, 3, 0, 48, 57, 65, 70, 97, 102, 4, 0, 10, 10, 13,
		13, 39, 39, 92, 92, 2, 0, 65, 90, 97, 122, 4, 0, 48, 57, 65, 90, 95, 95,
		97, 122, 2, 0, 10, 10, 13, 13, 3, 0, 9, 10, 13, 13, 32, 32, 2, 0, 67, 67,
		99, 99, 2, 0, 80, 80, 112, 112, 2, 0, 68, 68, 100, 100, 2, 0, 87, 87, 119,
		119, 2, 0, 72, 72, 104, 104, 361, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0,
		5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0,
		13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0,
		0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0,
		0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0,
		0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1,
		0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51,
		1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0,
		59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0,
		0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0,
		0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0,
		0, 0, 0, 83, 1, 0, 0, 0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1,
		0, 0, 0, 0, 91, 1, 0, 0, 0, 0, 93, 1, 0, 0, 0, 0, 95, 1, 0, 0, 0, 1, 109,
		1, 0, 0, 0, 3, 111, 1, 0, 0, 0, 5, 113, 1, 0, 0, 0, 7, 115, 1, 0, 0, 0,
		9, 117, 1, 0, 0, 0, 11, 119, 1, 0, 0, 0, 13, 121, 1, 0, 0, 0, 15, 124,
		1, 0, 0, 0, 17, 126, 1, 0, 0, 0, 19, 128, 1, 0, 0, 0, 21, 130, 1, 0, 0,
		0, 23, 133, 1, 0, 0, 0, 25, 135, 1, 0, 0, 0, 27, 137, 1, 0, 0, 0, 29, 139,
		1, 0, 0, 0, 31, 141, 1, 0, 0, 0, 33, 143, 1, 0, 0, 0, 35, 145, 1, 0, 0,
		0, 37, 147, 1, 0, 0, 0, 39, 149, 1, 0, 0, 0, 41, 151, 1, 0, 0, 0, 43, 153,
		1, 0, 0, 0, 45, 155, 1, 0, 0, 0, 47, 158, 1, 0, 0, 0, 49, 160, 1, 0, 0,
		0, 51, 163, 1, 0, 0, 0, 53, 166, 1, 0, 0, 0, 55, 174, 1, 0, 0, 0, 57, 182,
		1, 0, 0, 0, 59, 186, 1, 0, 0, 0, 61, 189, 1, 0, 0, 0, 63, 192, 1, 0, 0,
		0, 65, 199, 1, 0, 0, 0, 67, 204, 1, 0, 0, 0, 69, 207, 1, 0, 0, 0, 71, 214,
		1, 0, 0, 0, 73, 220, 1, 0, 0, 0, 75, 234, 1, 0, 0, 0, 77, 237, 1, 0, 0,
		0, 79, 241, 1, 0, 0, 0, 81, 249, 1, 0, 0, 0, 83, 260, 1, 0, 0, 0, 85, 265,
		1, 0, 0, 0, 87, 274, 1, 0, 0, 0, 89, 278, 1, 0, 0, 0, 91, 283, 1, 0, 0,
		0, 93, 289, 1, 0, 0, 0, 95, 303, 1, 0, 0, 0, 97, 315, 1, 0, 0, 0, 99, 319,
		1, 0, 0, 0, 101, 326, 1, 0, 0, 0, 103, 333, 1, 0, 0, 0, 105, 340, 1, 0,
		0, 0, 107, 347, 1, 0, 0, 0, 109, 110, 5, 59, 0, 0, 110, 2, 1, 0, 0, 0,
		111, 112, 5, 40, 0, 0, 112, 4, 1, 0, 0, 0, 113, 114, 5, 41, 0, 0, 114,
		6, 1, 0, 0, 0, 115, 116, 5, 123, 0, 0, 116, 8, 1, 0, 0, 0, 117, 118, 5,
		125, 0, 0, 118, 10, 1, 0, 0, 0, 119, 120, 5, 44, 0, 0, 120, 12, 1, 0, 0,
		0, 121, 122, 5, 58, 0, 0, 122, 123, 5, 58, 0, 0, 123, 14, 1, 0, 0, 0, 124,
		125, 5, 58, 0, 0, 125, 16, 1, 0, 0, 0, 126, 127, 5, 36, 0, 0, 127, 18,
		1, 0, 0, 0, 128, 129, 5, 64, 0, 0, 129, 20, 1, 0, 0, 0, 130, 131, 5, 58,
		0, 0, 131, 132, 5, 61, 0, 0, 132, 22, 1, 0, 0, 0, 133, 134, 5, 46, 0, 0,
		134, 24, 1, 0, 0, 0, 135, 136, 5, 91, 0, 0, 136, 26, 1, 0, 0, 0, 137, 138,
		5, 93, 0, 0, 138, 28, 1, 0, 0, 0, 139, 140, 5, 39, 0, 0, 140, 30, 1, 0,
		0, 0, 141, 142, 5, 95, 0, 0, 142, 32, 1, 0, 0, 0, 143, 144, 5, 43, 0, 0,
		144, 34, 1, 0, 0, 0, 145, 146, 5, 45, 0, 0, 146, 36, 1, 0, 0, 0, 147, 148,
		5, 42, 0, 0, 148, 38, 1, 0, 0, 0, 149, 150, 5, 47, 0, 0, 150, 40, 1, 0,
		0, 0, 151, 152, 5, 37, 0, 0, 152, 42, 1, 0, 0, 0, 153, 154, 5, 60, 0, 0,
		154, 44, 1, 0, 0, 0, 155, 156, 5, 60, 0, 0, 156, 157, 5, 61, 0, 0, 157,
		46, 1, 0, 0, 0, 158, 159, 5, 62, 0, 0, 159, 48, 1, 0, 0, 0, 160, 161, 5,
		62, 0, 0, 161, 162, 5, 61, 0, 0, 162, 50, 1, 0, 0, 0, 163, 164, 5, 33,
		0, 0, 164, 165, 5, 61, 0, 0, 165, 52, 1, 0, 0, 0, 166, 167, 5, 61, 0, 0,
		167, 168, 5, 61, 0, 0, 168, 54, 1, 0, 0, 0, 169, 175, 3, 99, 49, 0, 170,
		175, 3, 101, 50, 0, 171, 175, 3, 103, 51, 0, 172, 175, 3, 105, 52, 0, 173,
		175, 3, 107, 53, 0, 174, 169, 1, 0, 0, 0, 174, 170, 1, 0, 0, 0, 174, 171,
		1, 0, 0, 0, 174, 172, 1, 0, 0, 0, 174, 173, 1, 0, 0, 0, 175, 176, 1, 0,
		0, 0, 176, 178, 3, 97, 48, 0, 177, 179, 8, 0, 0, 0, 178, 177, 1, 0, 0,
		0, 179, 180, 1, 0, 0, 0, 180, 178, 1, 0, 0, 0, 180, 181, 1, 0, 0, 0, 181,
		56, 1, 0, 0, 0, 182, 183, 7, 1, 0, 0, 183, 184, 7, 2, 0, 0, 184, 185, 7,
		3, 0, 0, 185, 58, 1, 0, 0, 0, 186, 187, 7, 4, 0, 0, 187, 188, 7, 5, 0,
		0, 188, 60, 1, 0, 0, 0, 189, 190, 7, 4, 0, 0, 190, 191, 7, 1, 0, 0, 191,
		62, 1, 0, 0, 0, 192, 193, 7, 6, 0, 0, 193, 194, 7, 7, 0, 0, 194, 195, 7,
		8, 0, 0, 195, 196, 7, 6, 0, 0, 196, 197, 7, 4, 0, 0, 197, 198, 7, 1, 0,
		0, 198, 64, 1, 0, 0, 0, 199, 200, 7, 6, 0, 0, 200, 201, 7, 7, 0, 0, 201,
		202, 7, 8, 0, 0, 202, 203, 7, 6, 0, 0, 203, 66, 1, 0, 0, 0, 204, 205, 7,
		9, 0, 0, 205, 206, 7, 2, 0, 0, 206, 68, 1, 0, 0, 0, 207, 208, 7, 3, 0,
		0, 208, 209, 7, 6, 0, 0, 209, 210, 7, 9, 0, 0, 210, 211, 7, 10, 0, 0, 211,
		212, 7, 3, 0, 0, 212, 213, 7, 5, 0, 0, 213, 70, 1, 0, 0, 0, 214, 215, 7,
		11, 0, 0, 215, 216, 7, 3, 0, 0, 216, 217, 7, 6, 0, 0, 217, 218, 7, 12,
		0, 0, 218, 219, 7, 13, 0, 0, 219, 72, 1, 0, 0, 0, 220, 221, 7, 5, 0, 0,
		221, 222, 7, 6, 0, 0, 222, 223, 7, 14, 0, 0, 223, 224, 7, 9, 0, 0, 224,
		74, 1, 0, 0, 0, 225, 226, 7, 9, 0, 0, 226, 227, 7, 3, 0, 0, 227, 228, 7,
		10, 0, 0, 228, 235, 7, 6, 0, 0, 229, 230, 7, 1, 0, 0, 230, 231, 7, 12,
		0, 0, 231, 232, 7, 7, 0, 0, 232, 233, 7, 8, 0, 0, 233, 235, 7, 6, 0, 0,
		234, 225, 1, 0, 0, 0, 234, 229, 1, 0, 0, 0, 235, 76, 1, 0, 0, 0, 236, 238,
		7, 15, 0, 0, 237, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 237, 1, 0,
		0, 0, 239, 240, 1, 0, 0, 0, 240, 78, 1, 0, 0, 0, 241, 242, 5, 48, 0, 0,
		242, 243, 7, 14, 0, 0, 243, 245, 1, 0, 0, 0, 244, 246, 7, 16, 0, 0, 245,
		244, 1, 0, 0, 0, 246, 247, 1, 0, 0, 0, 247, 245, 1, 0, 0, 0, 247, 248,
		1, 0, 0, 0, 248, 80, 1, 0, 0, 0, 249, 255, 3, 29, 14, 0, 250, 254, 8, 17,
		0, 0, 251, 252, 5, 92, 0, 0, 252, 254, 9, 0, 0, 0, 253, 250, 1, 0, 0, 0,
		253, 251, 1, 0, 0, 0, 254, 257, 1, 0, 0, 0, 255, 253, 1, 0, 0, 0, 255,
		256, 1, 0, 0, 0, 256, 258, 1, 0, 0, 0, 257, 255, 1, 0, 0, 0, 258, 259,
		3, 29, 14, 0, 259, 82, 1, 0, 0, 0, 260, 261, 7, 5, 0, 0, 261, 262, 7, 10,
		0, 0, 262, 263, 7, 7, 0, 0, 263, 264, 7, 7, 0, 0, 264, 84, 1, 0, 0, 0,
		265, 269, 7, 18, 0, 0, 266, 268, 7, 19, 0, 0, 267, 266, 1, 0, 0, 0, 268,
		271, 1, 0, 0, 0, 269, 267, 1, 0, 0, 0, 269, 270, 1, 0, 0, 0, 270, 86, 1,
		0, 0, 0, 271, 269, 1, 0, 0, 0, 272, 275, 3, 17, 8, 0, 273, 275, 3, 19,
		9, 0, 274, 272, 1, 0, 0, 0, 274, 273, 1, 0, 0, 0, 275, 276, 1, 0, 0, 0,
		276, 277, 3, 85, 42, 0, 277, 88, 1, 0, 0, 0, 278, 279, 3, 97, 48, 0, 279,
		280, 1, 0, 0, 0, 280, 281, 6, 44, 0, 0, 281, 90, 1, 0, 0, 0, 282, 284,
		7, 20, 0, 0, 283, 282, 1, 0, 0, 0, 284, 285, 1, 0, 0, 0, 285, 283, 1, 0,
		0, 0, 285, 286, 1, 0, 0, 0, 286, 287, 1, 0, 0, 0, 287, 288, 6, 45, 0, 0,
		288, 92, 1, 0, 0, 0, 289, 290, 5, 47, 0, 0, 290, 291, 5, 42, 0, 0, 291,
		295, 1, 0, 0, 0, 292, 294, 9, 0, 0, 0, 293, 292, 1, 0, 0, 0, 294, 297,
		1, 0, 0, 0, 295, 296, 1, 0, 0, 0, 295, 293, 1, 0, 0, 0, 296, 298, 1, 0,
		0, 0, 297, 295, 1, 0, 0, 0, 298, 299, 5, 42, 0, 0, 299, 300, 5, 47, 0,
		0, 300, 301, 1, 0, 0, 0, 301, 302, 6, 46, 0, 0, 302, 94, 1, 0, 0, 0, 303,
		304, 5, 47, 0, 0, 304, 305, 5, 47, 0, 0, 305, 309, 1, 0, 0, 0, 306, 308,
		8, 20, 0, 0, 307, 306, 1, 0, 0, 0, 308, 311, 1, 0, 0, 0, 309, 307, 1, 0,
		0, 0, 309, 310, 1, 0, 0, 0, 310, 312, 1, 0, 0, 0, 311, 309, 1, 0, 0, 0,
		312, 313, 6, 47, 0, 0, 313, 96, 1, 0, 0, 0, 314, 316, 7, 21, 0, 0, 315,
		314, 1, 0, 0, 0, 316, 317, 1, 0, 0, 0, 317, 315, 1, 0, 0, 0, 317, 318,
		1, 0, 0, 0, 318, 98, 1, 0, 0, 0, 319, 320, 7, 8, 0, 0, 320, 321, 7, 6,
		0, 0, 321, 322, 7, 7, 0, 0, 322, 323, 7, 6, 0, 0, 323, 324, 7, 22, 0, 0,
		324, 325, 7, 9, 0, 0, 325, 100, 1, 0, 0, 0, 326, 327, 7, 4, 0, 0, 327,
		328, 7, 5, 0, 0, 328, 329, 7, 8, 0, 0, 329, 330, 7, 6, 0, 0, 330, 331,
		7, 3, 0, 0, 331, 332, 7, 9, 0, 0, 332, 102, 1, 0, 0, 0, 333, 334, 7, 10,
		0, 0, 334, 335, 7, 23, 0, 0, 335, 336, 7, 24, 0, 0, 336, 337, 7, 12, 0,
		0, 337, 338, 7, 9, 0, 0, 338, 339, 7, 6, 0, 0, 339, 104, 1, 0, 0, 0, 340,
		341, 7, 24, 0, 0, 341, 342, 7, 6, 0, 0, 342, 343, 7, 7, 0, 0, 343, 344,
		7, 6, 0, 0, 344, 345, 7, 9, 0, 0, 345, 346, 7, 6, 0, 0, 346, 106, 1, 0,
		0, 0, 347, 348, 7, 25, 0, 0, 348, 349, 7, 4, 0, 0, 349, 350, 7, 9, 0, 0,
		350, 351, 7, 26, 0, 0, 351, 108, 1, 0, 0, 0, 14, 0, 174, 180, 234, 239,
		247, 253, 255, 269, 274, 285, 295, 309, 317, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// ProcedureLexerInit initializes any static state used to implement ProcedureLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewProcedureLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func ProcedureLexerInit() {
	staticData := &ProcedureLexerLexerStaticData
	staticData.once.Do(procedurelexerLexerInit)
}

// NewProcedureLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewProcedureLexer(input antlr.CharStream) *ProcedureLexer {
	ProcedureLexerInit()
	l := new(ProcedureLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &ProcedureLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "ProcedureLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ProcedureLexer tokens.
const (
	ProcedureLexerSEMICOLON       = 1
	ProcedureLexerLPAREN          = 2
	ProcedureLexerRPAREN          = 3
	ProcedureLexerLBRACE          = 4
	ProcedureLexerRBRACE          = 5
	ProcedureLexerCOMMA           = 6
	ProcedureLexerTYPE_CAST       = 7
	ProcedureLexerCOLON           = 8
	ProcedureLexerDOLLAR          = 9
	ProcedureLexerAT              = 10
	ProcedureLexerASSIGN          = 11
	ProcedureLexerPERIOD          = 12
	ProcedureLexerLBRACKET        = 13
	ProcedureLexerRBRACKET        = 14
	ProcedureLexerSINGLE_QUOTE    = 15
	ProcedureLexerUNDERSCORE      = 16
	ProcedureLexerPLUS            = 17
	ProcedureLexerMINUS           = 18
	ProcedureLexerMUL             = 19
	ProcedureLexerDIV             = 20
	ProcedureLexerMOD             = 21
	ProcedureLexerLT              = 22
	ProcedureLexerLT_EQ           = 23
	ProcedureLexerGT              = 24
	ProcedureLexerGT_EQ           = 25
	ProcedureLexerNEQ             = 26
	ProcedureLexerEQ              = 27
	ProcedureLexerANY_SQL         = 28
	ProcedureLexerFOR             = 29
	ProcedureLexerIN              = 30
	ProcedureLexerIF              = 31
	ProcedureLexerELSEIF          = 32
	ProcedureLexerELSE            = 33
	ProcedureLexerTO              = 34
	ProcedureLexerRETURN          = 35
	ProcedureLexerBREAK           = 36
	ProcedureLexerNEXT            = 37
	ProcedureLexerBOOLEAN_LITERAL = 38
	ProcedureLexerINT_LITERAL     = 39
	ProcedureLexerBLOB_LITERAL    = 40
	ProcedureLexerTEXT_LITERAL    = 41
	ProcedureLexerNULL_LITERAL    = 42
	ProcedureLexerIDENTIFIER      = 43
	ProcedureLexerVARIABLE        = 44
	ProcedureLexerWS              = 45
	ProcedureLexerTERMINATOR      = 46
	ProcedureLexerBLOCK_COMMENT   = 47
	ProcedureLexerLINE_COMMENT    = 48
)
